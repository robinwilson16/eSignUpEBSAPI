CREATE PROCEDURE [dbo].[SPR_ESU_ESignUpCandidate]
	@AcademicYear VARCHAR(5),
	@CandidateRegistrationStatusID INT,
	@StudentType VARCHAR(1),
	@StudentRefs VARCHAR(50) = NULL
AS
BEGIN
	SET XACT_ABORT, NOCOUNT ON;

	SET DATEFORMAT ymd

	--DECLARE @AcademicYear VARCHAR(5) = '25/26'
	--DECLARE @CandidateRegistrationStatusID INT = 2 --2 = Pending
	--DECLARE @StudentType VARCHAR(1) = 'A' --A = Applications, R = Enrolments
	--DECLARE @StudentRefs VARCHAR(50) = NULL

	--List of Learners
	DROP TABLE IF EXISTS #Learners
	SELECT
		StudentRef = TRY_CAST ( TRIM ( STU.Value ) AS INT ),
		RowNum = STU.Ordinal
		INTO #Learners
	FROM STRING_SPLIT (@StudentRefs, ',', 1) STU


	--Get Current Year Dates
	DROP TABLE IF EXISTS #CurrentYear
	SELECT
		AcademicYear = @AcademicYear,
		FundingYear = FY.FUNDING_YEAR,
		YrStart = FY.START_DATE,
		YrEnd = FY.END_DATE
	INTO #CurrentYear
	FROM ebslive.dbo.FUNDING_YEARS FY
	WHERE
		CAST ( FY.START_DATE AS DATE ) <= '20' + RIGHT ( @AcademicYear, 2 ) + '-07-31'
		AND CAST ( FY.END_DATE AS DATE ) >= '20' + LEFT ( @AcademicYear, 2 ) + '-08-01'



	--Enrolments
	DROP TABLE IF EXISTS #EnrolsOrApps
	SELECT
		AcademicYearID = @AcademicYear,
		PersonCode = P.PERSON_CODE,
		Surname = P.SURNAME,
		Forename = P.FORENAME,
		DOB = P.DATE_OF_BIRTH,
		Age31Aug = 
			CASE
				WHEN MONTH ( P.DATE_OF_BIRTH ) <= 8 THEN '20' + LEFT ( @AcademicYear, 2 ) - YEAR ( P.DATE_OF_BIRTH )
				ELSE CAST ('20' + LEFT ( @AcademicYear, 2 ) AS INT ) - 1 - YEAR ( P.DATE_OF_BIRTH )
			END,
		AgeGroup = 
			CASE
				WHEN 
					CASE
						WHEN MONTH ( P.DATE_OF_BIRTH ) <= 8 THEN '20' + LEFT ( @AcademicYear, 2 ) - YEAR ( P.DATE_OF_BIRTH )
						ELSE CAST ('20' + LEFT ( @AcademicYear, 2 ) AS INT ) - 1 - YEAR ( P.DATE_OF_BIRTH )
					END
					< 16 THEN '14-15'
				WHEN 
					CASE
						WHEN MONTH ( P.DATE_OF_BIRTH ) <= 8 THEN '20' + LEFT ( @AcademicYear, 2 ) - YEAR ( P.DATE_OF_BIRTH )
						ELSE CAST ('20' + LEFT ( @AcademicYear, 2 ) AS INT ) - 1 - YEAR ( P.DATE_OF_BIRTH )
					END
					BETWEEN 16 AND 18 THEN '16-18'
				WHEN 
					CASE
						WHEN MONTH ( P.DATE_OF_BIRTH ) <= 8 THEN '20' + LEFT ( @AcademicYear, 2 ) - YEAR ( P.DATE_OF_BIRTH )
						ELSE CAST ('20' + LEFT ( @AcademicYear, 2 ) AS INT ) - 1 - YEAR ( P.DATE_OF_BIRTH )
					END
					BETWEEN 19 AND 24 THEN '19-24'
				WHEN 
					CASE
						WHEN MONTH ( P.DATE_OF_BIRTH ) <= 8 THEN '20' + LEFT ( @AcademicYear, 2 ) - YEAR ( P.DATE_OF_BIRTH )
						ELSE CAST ('20' + LEFT ( @AcademicYear, 2 ) AS INT ) - 1 - YEAR ( P.DATE_OF_BIRTH )
					END 
					>= 25 THEN '25+'
			END,
		ULN = P.UNIQUE_LEARN_NO,
		TelMobile = P.MOBILE_PHONE_NUMBER,
		GenderCode = P.SEX,
		GenderName = GEN.FES_LONG_DESCRIPTION,
		EthnicityCode = COALESCE ( P.ETHNICITY, 99 ),
		EthnicityName = ETH.DESCRIPTION,
		EthnicGroup = 
			CASE
				WHEN COALESCE ( P.ETHNICITY, 99 ) = 99 THEN 'Not Provided'
				WHEN COALESCE ( P.ETHNICITY, 99 ) = 31 THEN 'White British'
				WHEN COALESCE ( P.ETHNICITY, 99 ) = 34 THEN 'White'
				ELSE 'Ethnic Minority'
			END,
		EthnicGroupSort = 
			CASE
				WHEN COALESCE ( P.ETHNICITY, 99 ) = 99 THEN 1
				WHEN COALESCE ( P.ETHNICITY, 99 ) = 31 THEN 4
				WHEN COALESCE ( P.ETHNICITY, 99 ) = 34 THEN 3
				ELSE 2
			END,
		FreeSchoolMealsCode = 
			CASE
				WHEN COALESCE ( LI.FREE_MEAL_ELIGIBILITY, PI.FREE_MEAL_ELIGIBILITY ) IN ( 'Y', '1', '2' ) THEN 'Y'
				ELSE 'N'
			END,
		FreeSchoolMealsName = 
			CASE
				WHEN COALESCE ( LI.FREE_MEAL_ELIGIBILITY, PI.FREE_MEAL_ELIGIBILITY ) IN ( 'Y', '1', '2' ) THEN 'Eligible for Free School Meals'
				ELSE 'Not Eligible for Free School Meals'
			END,
		EHCPCode = COALESCE ( LI.HAS_HEALTHCARE_PLAN, PI.HAS_HEALTHCARE_PLAN ),
		EHCPName = 
			CASE
				WHEN COALESCE ( LI.HAS_HEALTHCARE_PLAN, PI.HAS_HEALTHCARE_PLAN ) = 'Y' THEN 'Has Educational Health Care Plan'
				ELSE 'Does Not Have Educational Health Care Plan'
			END,
		HighNeedsCode = COALESCE ( LI.HIGH_NEEDS, PI.HIGH_NEEDS ),
		HighNeedsName = 
			CASE
				WHEN COALESCE ( LI.HIGH_NEEDS, PI.HIGH_NEEDS ) = 'Y' THEN 'Is a High Needs Learner'
				ELSE 'Not a High Needs Learner'
			END,
		LearnDifDisCode = COALESCE ( LI.LEARN_DIFF, P.LEARN_DIFF, 9 ),
		LearnDifDisName = DIF.DESCRIPTION,
		LearnDifAssess = 
			CASE
				WHEN COALESCE ( LI.LEARN_DIFF_ASSMT, PI.LEARN_DIFF_ASSMT ) = 'Y' THEN 'Y'
				ELSE 'N'
			END,
		GCSEMathsGrade = COALESCE ( LI.GCSE_MATHS_QUAL_GRADE, PI.GCSE_MATHS_QUAL_GRADE ),
		GCSEEnglishGrade = COALESCE ( LI.GCSE_ENGLISH_QUAL_GRADE, PI.GCSE_ENGLISH_QUAL_GRADE ),
		CourseID = UIO.UIO_ID,
		CampusCode = UIO.SLOC_LOCATION_CODE,
		CampusName = LOC.FES_LONG_DESCRIPTION,
		FacultyCode = FAC.ORGANISATION_CODE,
		FacultyName = FAC.FES_FULL_NAME,
		DepartmentCode = UIO.OWNING_ORGANISATION,
		DepartmentName = DEPT.FES_FULL_NAME,
		CourseCode = UIO.FES_UINS_INSTANCE_CODE,
		CourseTitle = UIO.LONG_DESCRIPTION,
		OccurrenceCode = UIO.CALOCC_OCCURRENCE_CODE,
		--GroupCode = COALESCE ( TUT.Name, 'None' ), --Very Slow at CoPC and not used
		EnrolmentID = PU.ID,
		AimCode = COALESCE ( LA.LEARNING_AIM, UQA.QUAL_CODE ),
		AimTitle = FQA.DESCRIPTION,
		AwardingBody = FQA.AWARD_BODY_1,
		AimTypeCode = COALESCE ( LA.AIM_TYPE, PUS.AIM_TYPE, UQA.AIM_TYPE ),
		LearningAimTypeCode = FQA.QUAL_TYPE,
		LearningAimTypeName = FQA.QUAL_TYPE_DESCRIPTION,
		QualTypeCode = UI.FES_QUALIFICATION_TYPE,
		QualTypeName = QT.FES_LONG_DESCRIPTION,
		ModeOfAttendanceCode = UIO.FES_MOA_CODE,
		ModeOfAttendanceName = MOA.FES_LONG_DESCRIPTION,
		SSA1Code = FQA.SSA_TIER1_CODE,
		SSA1Name = RIGHT ( '00' + FQA.SSA_TIER1_CODE, 2 ) + ' - ' + FQA.SSA_TIER1_DESCRIPTION,
		SSA2Code = FQA.SSA_TIER2_CODE,
		SSA2Name = RIGHT ( '00' + FQA.SSA_TIER2_CODE, 4 ) + ' - ' + FQA.SSA_TIER2_DESCRIPTION,
		NVQLevelCode = COALESCE ( FQA.NOTIONAL_LEVEL_V2_CODE, 'X' ),
		NVQLevelName =
			CASE
				WHEN COALESCE ( FQA.NOTIONAL_LEVEL_V2_CODE, 'X' ) = 'E' THEN 'Entry Level'
				ELSE 'Level ' + COALESCE ( FQA.NOTIONAL_LEVEL_V2_CODE, 'X' )
			END,
		NVQLevelSort = 
			CASE
				WHEN COALESCE ( FQA.NOTIONAL_LEVEL_V2_CODE, 'X' ) = 'E' THEN 0
				WHEN COALESCE ( FQA.NOTIONAL_LEVEL_V2_CODE, 'X' ) = 'X' THEN -1
				ELSE TRY_CAST ( FQA.NOTIONAL_LEVEL_V2_CODE AS INT )
			END,
		FundStream = COALESCE ( LA.LSC_FUNDING_STREAM, PUS.FUNDING_STREAM, UQA.FE_HE_FUNDED ),
		FundSource = COALESCE ( LA.SOURCE_OF_FUNDING_1, UQA.MAJOR_FUND_SOURCE ),
		FundModelCode = 
			CASE
				WHEN
					CASE
						WHEN MONTH ( P.DATE_OF_BIRTH ) <= 8 THEN '20' + LEFT ( @AcademicYear, 2 ) - YEAR ( P.DATE_OF_BIRTH )
						ELSE CAST ('20' + LEFT ( @AcademicYear, 2 ) AS INT ) - 1 - YEAR ( P.DATE_OF_BIRTH )
					END < 16 THEN '14-15'
				WHEN COALESCE ( LA.LSC_FUNDING_STREAM, PUS.FUNDING_STREAM, UQA.FE_HE_FUNDED ) = '25' AND COALESCE ( LA.PROG_TYPE, PUS.PROG_TYPE, UQA.PROG_TYPE ) IN ( '30', '31' ) THEN 'TLevel'
				WHEN COALESCE ( LA.LSC_FUNDING_STREAM, PUS.FUNDING_STREAM, UQA.FE_HE_FUNDED ) = '25' THEN '16-19'
				WHEN COALESCE ( LA.HAS_STUDY_LOAN, PUS.HAS_STUDY_LOAN ) = 'Y' THEN 'AdvLoan'
				WHEN COALESCE ( LA.LSC_FUNDING_STREAM, PUS.FUNDING_STREAM, UQA.FE_HE_FUNDED ) = '36' THEN 'App' --Standard
				WHEN COALESCE ( LA.LSC_FUNDING_STREAM, PUS.FUNDING_STREAM, UQA.FE_HE_FUNDED ) IN ( '35', '36' ) AND COALESCE ( LA.PROG_TYPE, PUS.PROG_TYPE, UQA.PROG_TYPE ) = '25' THEN 'App' --Standard
				WHEN COALESCE ( LA.LSC_FUNDING_STREAM, PUS.FUNDING_STREAM, UQA.FE_HE_FUNDED ) IN ( '35', '36' ) AND COALESCE ( LA.PROG_TYPE, PUS.PROG_TYPE, UQA.PROG_TYPE ) IS NOT NULL THEN 'App' --Framework
				WHEN FQA.NOTIONAL_LEVEL_V2_CODE IN ( '4', '5', '6', '7', '8' ) THEN 'HE-Other'
				WHEN COALESCE ( LA.LSC_FUNDING_STREAM, PUS.FUNDING_STREAM, UQA.FE_HE_FUNDED ) = '35' AND COALESCE ( LA.SOURCE_OF_FUNDING_1, UQA.MAJOR_FUND_SOURCE ) = '105' THEN 'AEB-DFE'
				WHEN COALESCE ( LA.LSC_FUNDING_STREAM, PUS.FUNDING_STREAM, UQA.FE_HE_FUNDED ) = '35' THEN 'AEB-Dev'
				WHEN COALESCE ( LA.LSC_FUNDING_STREAM, PUS.FUNDING_STREAM, UQA.FE_HE_FUNDED ) = '38' AND COALESCE ( LA.SOURCE_OF_FUNDING_1, UQA.MAJOR_FUND_SOURCE ) = '105' THEN 'ASF-DFE'
				WHEN COALESCE ( LA.LSC_FUNDING_STREAM, PUS.FUNDING_STREAM, UQA.FE_HE_FUNDED ) = '38' THEN 'ASF-Dev'
				WHEN COALESCE ( LA.SOURCE_OF_FUNDING_1, UQA.MAJOR_FUND_SOURCE ) = '1' THEN 'HE-HEFCE'
				WHEN QT.FES_LONG_DESCRIPTION LIKE 'Higher Education%' THEN 'HE-Fran'
				WHEN COALESCE ( LA.LSC_FUNDING_STREAM, PUS.FUNDING_STREAM, UQA.FE_HE_FUNDED ) = '10' THEN 'ComLearn'
				WHEN COALESCE ( LA.LSC_FUNDING_STREAM, PUS.FUNDING_STREAM, UQA.FE_HE_FUNDED ) = '11' THEN 'TailoredLearn'
				WHEN COALESCE ( LA.LSC_FUNDING_STREAM, PUS.FUNDING_STREAM, UQA.FE_HE_FUNDED ) = '99' THEN 'NoFund'
			END,
		FundModelName = 
			CASE
				WHEN
					CASE
						WHEN MONTH ( P.DATE_OF_BIRTH ) <= 8 THEN '20' + LEFT ( @AcademicYear, 2 ) - YEAR ( P.DATE_OF_BIRTH )
						ELSE CAST ('20' + LEFT ( @AcademicYear, 2 ) AS INT ) - 1 - YEAR ( P.DATE_OF_BIRTH )
					END < 16 THEN '14-15'
				WHEN COALESCE ( LA.LSC_FUNDING_STREAM, PUS.FUNDING_STREAM, UQA.FE_HE_FUNDED ) = '25' AND COALESCE ( LA.PROG_TYPE, PUS.PROG_TYPE, UQA.PROG_TYPE ) IN ( '30', '31' ) THEN 'T Level'
				WHEN COALESCE ( LA.LSC_FUNDING_STREAM, PUS.FUNDING_STREAM, UQA.FE_HE_FUNDED ) = '25' THEN '16-19 Students (inc. High Needs)'
				WHEN COALESCE ( LA.HAS_STUDY_LOAN, PUS.HAS_STUDY_LOAN ) = 'Y' THEN 'Adv Learner Loan'
				WHEN COALESCE ( LA.LSC_FUNDING_STREAM, PUS.FUNDING_STREAM, UQA.FE_HE_FUNDED ) = '36' THEN 'Apprenticeship'
				WHEN COALESCE ( LA.LSC_FUNDING_STREAM, PUS.FUNDING_STREAM, UQA.FE_HE_FUNDED ) IN ( '35', '36' ) AND COALESCE ( LA.PROG_TYPE, PUS.PROG_TYPE, UQA.PROG_TYPE ) = '25' THEN 'Apprenticeship'
				WHEN COALESCE ( LA.LSC_FUNDING_STREAM, PUS.FUNDING_STREAM, UQA.FE_HE_FUNDED ) IN ( '35', '36' ) AND COALESCE ( LA.PROG_TYPE, PUS.PROG_TYPE, UQA.PROG_TYPE ) IS NOT NULL THEN 'Apprenticeship'
				WHEN FQA.NOTIONAL_LEVEL_V2_CODE IN ( '4', '5', '6', '7', '8' ) THEN 'HE - Non-Prescribed'
				WHEN COALESCE ( LA.LSC_FUNDING_STREAM, PUS.FUNDING_STREAM, UQA.FE_HE_FUNDED ) = '35' AND COALESCE ( LA.SOURCE_OF_FUNDING_1, UQA.MAJOR_FUND_SOURCE ) = '105' THEN 'AEB Adult - DFE'
				WHEN COALESCE ( LA.LSC_FUNDING_STREAM, PUS.FUNDING_STREAM, UQA.FE_HE_FUNDED ) = '35' THEN 'AEB Adult - Devolved'
				WHEN COALESCE ( LA.LSC_FUNDING_STREAM, PUS.FUNDING_STREAM, UQA.FE_HE_FUNDED ) = '38' AND COALESCE ( LA.SOURCE_OF_FUNDING_1, UQA.MAJOR_FUND_SOURCE ) = '105' THEN 'ASF Adult - DFE'
				WHEN COALESCE ( LA.LSC_FUNDING_STREAM, PUS.FUNDING_STREAM, UQA.FE_HE_FUNDED ) = '38' THEN 'ASF Adult - Devolved'
				WHEN COALESCE ( LA.SOURCE_OF_FUNDING_1, UQA.MAJOR_FUND_SOURCE ) = '1' THEN 'HE - HEFCE'
				WHEN QT.FES_LONG_DESCRIPTION LIKE 'Higher Education%' THEN 'HE - Franchised'
				WHEN COALESCE ( LA.LSC_FUNDING_STREAM, PUS.FUNDING_STREAM, UQA.FE_HE_FUNDED ) = '10' THEN 'Community Learning'
				WHEN COALESCE ( LA.LSC_FUNDING_STREAM, PUS.FUNDING_STREAM, UQA.FE_HE_FUNDED ) = '11' THEN 'Tailored Learning'
				WHEN COALESCE ( LA.LSC_FUNDING_STREAM, PUS.FUNDING_STREAM, UQA.FE_HE_FUNDED ) = '99' THEN 'Not Funded'
			END,
		IsAdvancedLearningLoanFunded = COALESCE ( LA.HAS_STUDY_LOAN, PUS.HAS_STUDY_LOAN ),
		ProgrammeTypeID = COALESCE ( LA.PROG_TYPE, PUS.PROG_TYPE, UQA.PROG_TYPE, '99' ),
		CompletionStatusCode = 
			COALESCE (
				LA.COMPLETION,
				CASE
					WHEN PU.PROGRESS_STATUS = 'A' THEN 1
					WHEN PU.PROGRESS_STATUS = 'F' THEN 2
					WHEN PU.PROGRESS_STATUS = 'W' AND PU.PROGRESS_CODE = 'BREAKINL' THEN 6
					WHEN PU.PROGRESS_STATUS = 'W' THEN
						CASE
							WHEN COALESCE ( LA.END_REASON, PUS.END_REASON ) = 40 THEN 4
							ELSE 3
						END
					WHEN PU.PROGRESS_STATUS = 'T' THEN 4
					ELSE 9
				END
			),
		CompletionStatusName = 
			CASE
				COALESCE (
					LA.COMPLETION,
					CASE
						WHEN PU.PROGRESS_STATUS = 'A' THEN 1
						WHEN PU.PROGRESS_STATUS = 'F' THEN 2
						WHEN PU.PROGRESS_STATUS = 'W' AND PU.PROGRESS_CODE = 'BREAKINL' THEN 6
						WHEN PU.PROGRESS_STATUS = 'W' THEN
							CASE
								WHEN COALESCE ( LA.END_REASON, PUS.END_REASON ) = 40 THEN 4
								ELSE 3
							END
						WHEN PU.PROGRESS_STATUS = 'T' THEN 4
						ELSE 9
					END
				)
				WHEN 1 THEN 'Continuing'
				WHEN 2 THEN 'Completed'
				WHEN 3 THEN 'Withdrawn'
				WHEN 4 THEN 'Transferred'
				WHEN 6 THEN 'Break in Learning'
				ELSE NULL
			END,
		OutcomeCode = 
			COALESCE (
				LA.OUTCOME,
				CASE
					WHEN PU.PROGRESS_CODE = 'COMPACH' THEN 1
					WHEN PU.PROGRESS_CODE = 'COMPNOACH' THEN 3
					WHEN PU.PROGRESS_CODE = 'COMPAWCERT' THEN 8
					ELSE 9
				END
			),
		OutcomeName = 
			CASE
				COALESCE (
					LA.OUTCOME,
					CASE
						WHEN PU.PROGRESS_CODE = 'COMPACH' THEN 1
						WHEN PU.PROGRESS_CODE = 'COMPNOACH' THEN 3
						WHEN PU.PROGRESS_CODE = 'COMPAWCERT' THEN 8
						ELSE 9
					END
				)
				WHEN 1 THEN 'Achieved'
				WHEN 2 THEN 'Partially Achieved'
				WHEN 3 THEN 'Failed'
				WHEN 8 THEN 'Unknown Outcome'
				ELSE NULL
			END,
		WithdrawReasonCode = COALESCE ( LA.END_REASON, PUS.END_REASON ),
		WithdrawReasonName = ENDR.DESCRIPTION,
		StartDate = COALESCE ( LA.START_DATE, PUS.AIM_START, PUS.START_DATE, UIO.FES_START_DATE, UQA.START_DATE ),
		ExpectedEndDate = COALESCE ( LA.EXP_END_DATE, PUS.AIM_END, PUS.END_DATE, UIO.FES_END_DATE, UQA.END_DATE ),
		ActualEndDate = 
			COALESCE ( 
				LA.END_DATE, 
				CASE
					WHEN PU.PROGRESS_STATUS = 'A' THEN NULL
					ELSE PU.PROGRESS_DATE
				END
			),
		NVQAchievementDate = 
			COALESCE (
				LA.NVQ_ACHIEVE_DATE,
				PUS.NVQ_ACHIEVE_DATE
			),
		CourseStartDate = COALESCE ( UIO.FES_START_DATE, UQA.START_DATE ),
		CourseEndDate = COALESCE ( UIO.FES_END_DATE, UQA.END_DATE ),
		PlannedLearnHours = COALESCE ( LA.EXPECTED_GUIDED_HOURS, PUS.EXP_GUIDED_HRS, UQA.GUIDED_HOURS, 0 ),
		PlannedEEPHours = COALESCE ( LA.PLANNED_EEP_HOURS, PUS.PLANNED_EEP_HOURS, UQA.PLANNED_EEP_HOURS, 0 ),
		PlannedTLevelHours = COALESCE ( LA.PLANNED_HOURS, PUS.PLANNED_HOURS, UQA.PLANNED_HOURS, 0 ),
		IncludeInILR = 
			COALESCE ( 
				LA.ILR,
				CASE
					WHEN PU.PROGRESS_STATUS IN ( 'A', 'F', 'W', 'T' ) AND UQA.QUAL_CODE IS NOT NULL THEN 'Y'
					ELSE 'N'
				END
			)
		INTO #EnrolsOrApps
	FROM ebslive.dbo.UNIT_INSTANCE_OCCURRENCES UIO
	INNER JOIN #CurrentYear CY
		ON 1 = 1
	INNER JOIN ebslive.dbo.FUNDING_YEARS FY
		ON FY.FUNDING_YEAR = CY.FundingYear
	INNER JOIN ebslive.dbo.UNIT_INSTANCES UI
		ON UI.FES_UNIT_INSTANCE_CODE = UIO.FES_UINS_INSTANCE_CODE
	INNER JOIN ebslive.dbo.CALENDAR_OCCURRENCES CAL
		ON CAL.OCCURRENCE_CODE = UIO.CALOCC_OCCURRENCE_CODE
	INNER JOIN ebslive.dbo.PEOPLE_UNITS PU
		ON PU.UIO_ID = UIO.UIO_ID
		AND PU.UNIT_TYPE = @StudentType
	INNER JOIN ebslive.dbo.PEOPLE P
		ON P.PERSON_CODE = PU.PERSON_CODE
	INNER JOIN ebslive.dbo.PROGRESS_CODES PC
		ON PC.TYPE_NAME = PU.PROGRESS_CODE
	INNER JOIN ebslive.dbo.ORGANISATION_UNITS DEPT
		ON DEPT.ORGANISATION_CODE = UIO.OWNING_ORGANISATION
	INNER JOIN ebslive.dbo.ORG_UNIT_LINKS DEPTL
		ON DEPTL.SECONDARY_ORGANISATION = DEPT.ORGANISATION_CODE
	INNER JOIN ebslive.dbo.ORGANISATION_UNITS FAC
		ON FAC.ORGANISATION_CODE = DEPTL.PRIMARY_ORGANISATION
	LEFT JOIN ebslive.dbo.LOCATIONS LOC
		ON LOC.LOCATION_CODE = UIO.SLOC_LOCATION_CODE
	LEFT JOIN ebslive.dbo.PEOPLE_UNITS_SPECIAL PUS
		ON PUS.PEOPLE_UNITS_ID = PU.ID
		AND PU.SPECIAL_DETAILS = 'Y'
	LEFT JOIN (
		SELECT
			PeopleUnitsID = PUTG.PEOPLE_UNITS_ID,
			TutorGroupID = PUTG.TUTORGROUP_ID,
			RowNum = 
				ROW_NUMBER () OVER (
					PARTITION BY
						PUTG.PEOPLE_UNITS_ID
					ORDER BY
						CASE
							WHEN CAST ( PUTG.START_DATE AS DATE ) <= CAST ( GETDATE() AS DATE ) THEN 1
							ELSE 0
						END,
						PUTG.START_DATE DESC,
						PUTG.ID DESC
				)
		FROM ebslive.dbo.PEOPLE_UNIT_TUTORGROUPS PUTG
		INNER JOIN #CurrentYear CY
			ON 1 = 1
		WHERE
			PUTG.START_DATE >= CY.YrStart
			AND PUTG.START_DATE <= CY.YrEnd
	) PUTGM
		ON PUTGM.PeopleUnitsID = PU.ID
		AND PUTGM.RowNum = 1
	LEFT JOIN ebslive.dbo.PEOPLE_UNIT_TUTORGROUPS PUTG
		ON PUTG.ID = PUTGM.PeopleUnitsID
	LEFT JOIN ebslive.dbo.TUTORGROUPS TUT
		ON TUT.ID = PUTG.TUTORGROUP_ID
	LEFT JOIN (
		-- In case of duplicates
		SELECT
			AimID = UQA.ID,
			AimFundingYear = UQA.FUNDING_YEAR,
			AimCourseID = UQA.UIO_ID,
			AimIsDefault = UQA.DEFAULT_QA,
			RowNum = 
				ROW_NUMBER () OVER (
					PARTITION BY
						UQA.FUNDING_YEAR,
						UQA.UIO_ID
					ORDER BY
						UQA.DEFAULT_QA DESC
				)
		FROM ebslive.dbo.UIO_QUAL_AIMS UQA
		INNER JOIN #CurrentYear CY
			ON 1 = 1
		INNER JOIN ebslive.dbo.FUNDING_YEARS FY
			ON FY.FUNDING_YEAR = CY.FundingYear
		WHERE 
			UQA.FUNDING_YEAR = FY.FUNDING_YEAR
	) UQAM
		ON UQAM.AimCourseID = UIO.UIO_ID
		AND UQAM.AimFundingYear = FY.FUNDING_YEAR
		AND UQAM.RowNum = 1
	LEFT JOIN ebslive.dbo.UIO_QUAL_AIMS UQA
		ON UQA.ID = UQAM.AimID
	LEFT JOIN (
		-- In case of duplicates
		SELECT
			AimID = LA.ID,
			AimFundingYear = LA.FUNDING_YEAR,
			AimPUID = LA.RUL_CODE,
			AimILR = LA.ILR,
			RowNum = 
				ROW_NUMBER () OVER (
					PARTITION BY
						LA.FUNDING_YEAR,
						LA.RUL_CODE
					ORDER BY
						LA.ILR DESC,
						CASE WHEN LA.UIO_ID IS NOT NULL THEN 1 ELSE 2 END
				)
		FROM ebslive.dbo.LEARNER_AIMS LA
		INNER JOIN #CurrentYear CY
			ON 1 = 1
		INNER JOIN ebslive.dbo.FUNDING_YEARS FY
			ON FY.FUNDING_YEAR = CY.FundingYear
		WHERE 
			LA.FUNDING_YEAR = FY.FUNDING_YEAR
	) LAM
		ON LAM.AimPUID = PU.ID
		AND LAM.AimFundingYear = FY.FUNDING_YEAR
		AND LAM.RowNum = 1
	LEFT JOIN ebslive.dbo.LEARNER_AIMS LA
		ON LA.ID = LAM.AimID
		AND PU.DATA_RETURN = 'Y'
	LEFT JOIN ebslive.dbo.FEFC_QUAL_AIMS FQA
		ON FQA.QUAL_CODE = COALESCE ( LA.LEARNING_AIM, UQA.QUAL_CODE )
		AND FQA.FUNDING_YEAR = UQA.FUNDING_YEAR
	LEFT JOIN ebslive.dbo.PEOPLE_ILR PI
		ON PI.PERSON_CODE = P.PERSON_CODE
	LEFT JOIN ebslive.dbo.LEARNER_ILR LI
		ON LI.PERSON_CODE = LA.PERSON_CODE
		AND LI.FUNDING_YEAR = LA.FUNDING_YEAR
	--Extra Info
	LEFT JOIN ebslive.dbo.VERIFIERS GEN
		ON GEN.LOW_VALUE = P.SEX
		AND GEN.RV_DOMAIN = 'SEX'
	LEFT JOIN ebslive.dbo.LSC_VERIFIERS ETH
		ON ETH.CODE = COALESCE ( P.ETHNICITY, 99 )
		AND ETH.FUNDING_YEAR = FY.FUNDING_YEAR
		AND ETH.RV_DOMAIN = 'ETHNICITY'
	LEFT JOIN ebslive.dbo.LSC_VERIFIERS DIF
		ON DIF.CODE = COALESCE ( LI.LEARN_DIFF, P.LEARN_DIFF, 9 )
		AND DIF.FUNDING_YEAR = FY.FUNDING_YEAR
		AND DIF.RV_DOMAIN = 'LEARN_DIFF'
	LEFT JOIN ebslive.dbo.VERIFIERS QT
		ON QT.LOW_VALUE = UI.FES_QUALIFICATION_TYPE
		AND QT.RV_DOMAIN = 'QUALIFICATION_TYPE'
	LEFT JOIN ebslive.dbo.MODES_OF_PROVISION MOA
		ON MOA.MOA_CODE = UIO.FES_MOA_CODE
	LEFT JOIN ebslive.dbo.LSC_VERIFIERS ENDR
		ON ENDR.CODE = COALESCE ( LA.END_REASON, PUS.END_REASON )
		AND ENDR.FUNDING_YEAR = FY.FUNDING_YEAR
		AND ENDR.RV_DOMAIN = 'END_REASON'
	LEFT JOIN #Learners LRN
		ON LRN.StudentRef = P.PERSON_CODE
	LEFT JOIN (
		SELECT
			NumLearnersSelected = COUNT ( LRN.StudentRef )
		FROM #Learners LRN
	) LRNA
		ON 1 = 1
	WHERE
		(
			--Dates span current year
			(
				COALESCE ( LA.ORIG_LEARN_START_DATE, PUS.ORIG_LEARN_START_DATE, LA.START_DATE, PUS.AIM_START, PUS.START_DATE, UIO.FES_START_DATE, UQA.START_DATE ) <= CAST ( CY.YrEnd AS DATE )
				AND 
					CASE
						WHEN 
						COALESCE ( 
							LA.NVQ_ACHIEVE_DATE,
							PUS.NVQ_ACHIEVE_DATE,
							LA.END_DATE,
							CASE
								WHEN PU.PROGRESS_STATUS = 'A' THEN NULL
								ELSE PU.PROGRESS_DATE
							END
						) > COALESCE ( LA.EXP_END_DATE, PUS.AIM_END, PUS.END_DATE, UIO.FES_END_DATE, UQA.END_DATE ) THEN
							COALESCE ( 
								LA.NVQ_ACHIEVE_DATE,
								PUS.NVQ_ACHIEVE_DATE,
								CASE
									WHEN PU.PROGRESS_STATUS = 'A' THEN NULL
									ELSE PU.PROGRESS_DATE
								END
							)
						ELSE COALESCE ( LA.EXP_END_DATE, PUS.AIM_END, PUS.END_DATE, UIO.FES_END_DATE, UQA.END_DATE )
					END >= CAST ( CY.YrStart AS DATE )
			)
			--Or still on programme (from previous year)
			OR (
				COALESCE ( LA.ORIG_LEARN_START_DATE, PUS.ORIG_LEARN_START_DATE, LA.START_DATE, PUS.AIM_START, PUS.START_DATE, UIO.FES_START_DATE, UQA.START_DATE ) <= CAST ( CY.YrEnd AS DATE )
				AND COALESCE (
					LA.COMPLETION,
					CASE
						WHEN PU.PROGRESS_STATUS = 'A' THEN 1
						WHEN PU.PROGRESS_STATUS = 'F' THEN 2
						WHEN PU.PROGRESS_STATUS = 'W' AND PU.PROGRESS_CODE = 'BREAKINL' THEN 6
						WHEN PU.PROGRESS_STATUS = 'W' THEN 3
						WHEN PU.PROGRESS_STATUS = 'T' THEN 4
						ELSE 9
					END
				) = 1
			)
		)
		--Course is not in the future
		AND COALESCE ( LA.ORIG_LEARN_START_DATE, PUS.ORIG_LEARN_START_DATE, LA.START_DATE, PUS.AIM_START, PUS.START_DATE, UIO.FES_START_DATE, UQA.START_DATE ) >= CAST ( CY.YrStart AS DATE )
		AND ( LRNA.NumLearnersSelected = 0 OR LRN.StudentRef IS NOT NULL )
	--ORDER BY
	--	P.SURNAME,
	--	P.FORENAME,
	--	P.PERSON_CODE


	--Main Aims
	DROP TABLE IF EXISTS #EnrolsOrAppsWithMainAimFlagged
	SELECT
		ENR.AcademicYearID,
		ENR.PersonCode,
		ENR.Surname,
		ENR.Forename,
		ENR.DOB,
		ENR.Age31Aug,
		ENR.AgeGroup,
		ENR.ULN,
		ENR.TelMobile,
		ENR.GenderCode,
		ENR.GenderName,
		ENR.EthnicityCode,
		ENR.EthnicityName,
		ENR.EthnicGroup,
		ENR.EthnicGroupSort,
		ENR.FreeSchoolMealsCode,
		ENR.FreeSchoolMealsName,
		ENR.EHCPCode,
		ENR.EHCPName,
		ENR.HighNeedsCode,
		ENR.HighNeedsName,
		ENR.LearnDifDisCode,
		ENR.LearnDifDisName,
		ENR.LearnDifAssess,
		ENR.GCSEMathsGrade,
		ENR.GCSEEnglishGrade,
		ENR.CourseID,
		ENR.CampusCode,
		ENR.CampusName,
		ENR.FacultyCode,
		ENR.FacultyName,
		ENR.DepartmentCode,
		ENR.DepartmentName,
		ENR.CourseCode,
		ENR.CourseTitle,
		ENR.OccurrenceCode,
		ENR.EnrolmentID,
		ENR.AimCode,
		ENR.AimTitle,
		ENR.AwardingBody,
		ENR.AimTypeCode,
		ENR.LearningAimTypeCode,
		ENR.LearningAimTypeName,
		ENR.QualTypeCode,
		ENR.QualTypeName,
		ENR.ModeOfAttendanceCode,
		ENR.ModeOfAttendanceName,
		ENR.SSA1Code,
		ENR.SSA1Name,
		ENR.SSA2Code,
		ENR.SSA2Name,
		ENR.NVQLevelCode,
		ENR.NVQLevelName,
		ENR.NVQLevelSort,
		ENR.FundStream,
		ENR.FundSource,
		ENR.FundModelCode,
		ENR.FundModelName,
		ENR.IsAdvancedLearningLoanFunded,
		ENR.ProgrammeTypeID,
		ENR.CompletionStatusCode,
		ENR.CompletionStatusName,
		ENR.OutcomeCode,
		ENR.OutcomeName,
		ENR.WithdrawReasonCode,
		ENR.WithdrawReasonName,
		ENR.StartDate,
		ENR.ExpectedEndDate,
		ENR.ActualEndDate,
		ENR.NVQAchievementDate,
		ENR.PlannedLearnHours,
		ENR.PlannedEEPHours,
		ENR.PlannedTLevelHours,
		ENR.IncludeInILR,
		CountAsStart = 
			CASE
				WHEN ENR.CompletionStatusCode NOT IN ( '1', '2', '3' ) THEN 'N'
				WHEN ENR.CompletionStatusCode = '3' AND ENR.WithdrawReasonCode = 40 THEN 'N' --Ensure transfers do not count when withdrawal reason was used
				WHEN COALESCE ( ENR.NVQAchievementDate, ENR.ActualEndDate, ENR.ExpectedEndDate ) < '20' + LEFT ( ENR.AcademicYearID, 2 ) + '-08-01' AND ENR.CompletionStatusCode <> '1' THEN 'N' --Exclude rolled forward for achievement
				--Add override for OFS Data which will be excluded from ILR if returned to OFS
				WHEN ENR.IncludeInILR = 'N' THEN 'N'
				WHEN ENR.AimCode IS NULL THEN 'N'
				WHEN ENR.CompletionStatusCode = '1' THEN 'Y'
				WHEN ENR.CompletionStatusCode = '2' THEN 'Y' -- Always count completed or continuing aims regardness of durations
				WHEN ENR.StartDate IS NULL THEN 'N'
				WHEN ENR.ExpectedEndDate IS NULL THEN 'N'
				WHEN ENR.FundSource = '001' THEN 
					CASE
						-- HE 1st Nov Rule
						WHEN ENR.ActualEndDate >= '20' + LEFT ( ENR.AcademicYearID, 2 ) + '-11-01' THEN 'Y'
						ELSE 'N'
					END
				WHEN ENR.FundStream = '99' AND COALESCE ( ENR.IsAdvancedLearningLoanFunded, 'N' ) = 'N' AND ENR.CompletionStatusCode = '3' AND DATEDIFF ( d, ENR.StartDate, ENR.ActualEndDate ) + 1 > 1 THEN 'Y'
				ELSE
					CASE
						WHEN 
							-- Very Short
							DATEDIFF ( d, ENR.CourseStartDate, ENR.CourseEndDate ) + 1 < 14 -- Course duration less than 2 weeks
							AND (
								DATEDIFF ( d, PRG.StartDate, PRG.ActualEndDate ) + 1 > 0
								OR DATEDIFF ( d, ENR.StartDate, ENR.ActualEndDate ) + 1 > 1 -- Studied at all
							)
							THEN 'N' -- No longer counted as per QAR rules
						WHEN 
							-- Short
							DATEDIFF ( d, ENR.CourseStartDate, ENR.CourseEndDate ) + 1 < 168 -- Course duration less than 24 weeks
							AND (
								DATEDIFF ( d, PRG.StartDate, PRG.ActualEndDate ) + 1 >= 14
								OR DATEDIFF ( d, ENR.StartDate, ENR.ActualEndDate ) + 1 >= 14 -- Studied at least 2 weeks
							)
							THEN 'Y'
						WHEN 
							-- Long
							DATEDIFF ( d, ENR.CourseStartDate, ENR.CourseEndDate ) + 1 >= 168 -- Course duration 24 weeks +
							AND (
								DATEDIFF ( d, PRG.StartDate, PRG.ActualEndDate ) + 1 >= 42
								OR DATEDIFF ( d, ENR.StartDate, ENR.ActualEndDate ) + 1 >= 42 -- Studied at least 6 weeks
							)
							THEN 'Y'
						ELSE 'N'
					END
			END,
		RowNum = 
			ROW_NUMBER () OVER (
				PARTITION BY
					ENR.PersonCode
				ORDER BY
					ENR.IncludeInILR DESC,
					CASE
						WHEN ENR.AimCode IS NOT NULL THEN 1
						ELSE 2
					END,
					ENR.CompletionStatusCode,
					CASE
						--Make main aim the real learning aim within an apprenticeship so can include NVQ Level etc
						WHEN ENR.AimCode = 'ZPROG001' THEN 2
						ELSE 1
					END,
					ENR.ProgrammeTypeID,
					CASE
						WHEN ENR.AimTypeCode = 1 THEN 1 --Programme Aim
						WHEN ENR.AimTypeCode = 5 THEN 2 --Core Aim
						ELSE 3
					END,
					CASE
						WHEN ENR.LearningAimTypeCode IN (
							'0003', --GCSE
							'1439' --Functional Skills
						) THEN 2
						ELSE 1
					END,
					ENR.NVQLevelSort DESC,
					ENR.PlannedLearnHours + ENR.PlannedEEPHours + ENR.PlannedTLevelHours DESC,
					DATEDIFF ( DAY, ENR.StartDate, COALESCE ( ENR.ActualEndDate, ENR.ExpectedEndDate ) ) DESC,
					ENR.StartDate,
					ENR.EnrolmentID
			)
		INTO #EnrolsOrAppsWithMainAimFlagged
	FROM #EnrolsOrApps ENR
	LEFT JOIN (
		SELECT
			PersonCode = ENR.PersonCode,
			StartDate = MIN ( ENR.StartDate ),
			ExpectedEndDate = MAX ( ENR.ExpectedEndDate ),
			ActualEndDate = MAX ( ENR.ActualEndDate )
		FROM #EnrolsOrApps ENR
		WHERE
			ENR.FundStream = '25'
			AND ENR.IncludeInILR = 'Y'
			AND ENR.CompletionStatusCode IN ( '1', '2', '3' )
		GROUP BY
			ENR.PersonCode
	) PRG
		ON PRG.PersonCode = ENR.PersonCode



	SELECT
		ID = CAST ( P.PERSON_CODE AS INT ),
		StudentID = CAST ( P.PERSON_CODE AS VARCHAR(50) ),
		ULN = CAST (P.UNIQUE_LEARN_NO AS VARCHAR(50) ),
		Title = TIT.FES_LONG_DESCRIPTION,
		ListCandidateTitleID = 
			CASE
				TIT.LOW_VALUE
				WHEN 'DR' THEN 4 --Doctor > Dr.
				WHEN 'MISS' THEN 3 --Miss > Miss.
				WHEN 'MR' THEN 1 --Mr > Mr.
				WHEN 'MRS' THEN 2 --Mrs > Mrs.
				WHEN 'MS' THEN 5 --Ms > Ms.
				WHEN 'MX' THEN NULL --Mx
				ELSE NULL
			END,
		Surname = P.SURNAME,
		PreviousSurname = P.PREVIOUS_SURNAME,
		FirstNames = 
			CASE
				WHEN LEN ( P.MIDDLE_NAMES ) > 0 THEN 
					P.FORENAME + ' ' + P.MIDDLE_NAMES
				ELSE
					P.FORENAME
			END,
		PreferredName = P.KNOWN_AS,
		DateOfBirth = P.DATE_OF_BIRTH,
		Sex = P.SEX,
		HomeAddress1 = AD.ADDRESS_LINE_1,
		HomeAddress2 = AD.ADDRESS_LINE_2,
		HomeAddress3 = 
			CASE
				WHEN 
					LEN ( AD.ADDRESS_LINE_3 ) > 0 
					AND LEN ( AD.ADDRESS_LINE_4 ) > 0 
					AND LEN ( AD.ADDRESS_LINE_5 ) > 0 
					THEN 
					AD.ADDRESS_LINE_3 + ', ' + AD.ADDRESS_LINE_4 + ', ' + AD.ADDRESS_LINE_5
				WHEN 
					LEN ( AD.ADDRESS_LINE_3 ) > 0 
					AND LEN ( AD.ADDRESS_LINE_4 ) > 0 
					THEN 
					AD.ADDRESS_LINE_3 + ', ' + AD.ADDRESS_LINE_4
				ELSE
					COALESCE ( AD.ADDRESS_LINE_3, AD.ADDRESS_LINE_4, AD.ADDRESS_LINE_5 )
			END,
		HomeAddress4 = 
			CASE
				WHEN 
					LEN ( AD.TOWN ) > 0
					AND LEN ( AD.REGION ) > 0
					THEN AD.TOWN + ', ' + AD.REGION
				WHEN 
					LEN ( AD.TOWN ) > 0
					AND LEN ( AD.REGION ) > 0
					THEN AD.TOWN
				ELSE
					AD.REGION
			END,
		HomePostCode = AD.UK_POST_CODE_PT1 + ' ' + AD.UK_POST_CODE_PT2,
		TelephoneNumber = AD.TELEPHONE,
		MobileNumber = P.MOBILE_PHONE_NUMBER,
		EmailAddress = P.PERSONAL_EMAIL,
		EmergencyContactFullName = P.FES_NEXT_OF_KIN,
		EmergencyContactTelNumber = P.FES_NOK_CONTACT_NO,
		EmergencyContactEmail = P.FES_USER_7,
		EmergencyContactRelationship = 
			CASE
				REL.LOW_VALUE
				WHEN 'ASS' THEN 'Work colleague'
				WHEN 'BOY' THEN 'Partner'
				WHEN 'BRO' THEN 'Brother'
				WHEN 'ORG' THEN 'Work colleague'
				WHEN 'CAR' THEN 'Carer'
				WHEN 'CAS' THEN 'Work colleague'
				WHEN 'DAU' THEN 'Daughter'
				WHEN 'EMR' THEN 'Other'
				WHEN 'EMP' THEN 'Work colleague'
				WHEN 'EXTFAM' THEN 'Other'
				WHEN 'FARM' THEN 'Other'
				WHEN 'FAH' THEN 'Father'
				WHEN 'FIAN' THEN 'Partner'
				WHEN 'FCARE' THEN 'Carer'
				WHEN 'FRIE' THEN 'Friend'
				WHEN 'GIRL' THEN 'Partner'
				WHEN 'GPAR' THEN 'Grandparent'
				WHEN 'GUARD' THEN 'Other'
				WHEN 'HOS' THEN 'Other'
				WHEN 'HOST' THEN 'Other'
				WHEN 'HUS' THEN 'Partner'
				WHEN 'KEY' THEN 'Carer'
				WHEN 'MOTH' THEN 'Mother'
				WHEN 'NEI' THEN 'Other'
				WHEN 'NIE' THEN 'Niece'
				WHEN 'WWW' THEN 'Other'
				WHEN 'ZZZ' THEN 'Other'
				WHEN 'OOO' THEN 'Other'
				WHEN 'YYY' THEN 'Other'
				WHEN 'PAR' THEN 'Other'
				WHEN 'PART' THEN 'Partner'
				WHEN 'SEL' THEN 'Other'
				WHEN 'SIB' THEN 'Other'
				WHEN 'SIS' THEN 'Sister'
				WHEN 'SOC' THEN 'Carer'
				WHEN 'SON' THEN 'Son'
				WHEN 'SPAR' THEN 'Other'
				WHEN 'SSIB' THEN 'Other'
				WHEN 'SUP' THEN 'Carer'
				WHEN 'XXX' THEN 'Other'
				WHEN 'WIFE' THEN 'Wife'
				ELSE NULL
			END,
		ListEmergencyContactRelationshipID = 
			CASE
				REL.LOW_VALUE
				WHEN 'ASS' THEN 47 --Assessor (Apprenticeships) > Work colleague
				WHEN 'BOY' THEN 38 --Boyfriend > Partner
				WHEN 'BRO' THEN 26 --Brother > Brother
				WHEN 'ORG' THEN 47 --Carer (Organization) > Work colleague
				WHEN 'CAR' THEN 27 --Carer (Person) > Carer
				WHEN 'CAS' THEN 47 --Case Worker > Work colleague
				WHEN 'DAU' THEN 29 --Daughter > Daughter
				WHEN 'EMR' THEN 37 --Emergency > Other
				WHEN 'EMP' THEN 47 --Employer > Work colleague
				WHEN 'EXTFAM' THEN 37 --Extended family member > Other
				WHEN 'FARM' THEN 37 --Family > Other
				WHEN 'FAH' THEN 30 --Father > Father
				WHEN 'FIAN' THEN 38 --Fiance > Partner
				WHEN 'FCARE' THEN 27 --Foster Carer > Carer
				WHEN 'FRIE' THEN 31 --Friend > Friend
				WHEN 'GIRL' THEN 38 --Girlfriend > Partner
				WHEN 'GPAR' THEN 32 --Grand Parent > Grandparent
				WHEN 'GUARD' THEN 37 --Guardian > Other
				WHEN 'HOS' THEN 37 --Host > Other
				WHEN 'HOST' THEN 37 --Host Parent > Other
				WHEN 'HUS' THEN 38 --Husband > Partner
				WHEN 'KEY' THEN 27 --Key Worker > Carer
				WHEN 'MOTH' THEN 34 --Mother > Mother
				WHEN 'NEI' THEN 37 --Neighbour > Other
				WHEN 'NIE' THEN 36 --Niece > Niece
				WHEN 'WWW' THEN 37 --Not Applicable > Other
				WHEN 'ZZZ' THEN 37 --Not Stated (intentionally) > Other
				WHEN 'OOO' THEN 37 --OASIS Data Conversion > Other
				WHEN 'YYY' THEN 37 --Other (Not elsewhere classified) > Other
				WHEN 'PAR' THEN 37 --Parent > Other
				WHEN 'PART' THEN 38 --Partner > Partner
				WHEN 'SEL' THEN 37 --Self (independent) > Other
				WHEN 'SIB' THEN 37 --Sibling > Other
				WHEN 'SIS' THEN 39 --Sister > Sister
				WHEN 'SOC' THEN 27 --Social Worker > Carer
				WHEN 'SON' THEN 40 --Son > Son
				WHEN 'SPAR' THEN 37 --Step Parent > Other
				WHEN 'SSIB' THEN 37 --Step Sibling > Other
				WHEN 'SUP' THEN 27 --Support Worker > Carer
				WHEN 'XXX' THEN 37 --Unknown/Not Provided > Other
				WHEN 'WIFE' THEN 46 --Wife > Wife
				ELSE NULL
			END,
		CandidateEthnicityID =
			CASE
				ETH.CODE
				WHEN 44 THEN 15 --African > Black/African/Caribbean - African
				WHEN 43 THEN 14 --Any other Asian background > Asian/Asian Black - Any other
				WHEN 46 THEN 17 --Any other Black / African / Caribbean background > Black/African/Caribbean -Any other
				WHEN 98 THEN 19 --Any other ethnic group > Other ethnic group - Any other
				WHEN 38 THEN 9 --Any Other Mixed / multiple ethnic background > Mixed/Multiple ethnic group -Any other
				WHEN 34 THEN 5 --Any Other White background > White - Any other white background
				WHEN 47 THEN 18 --Arab > Other ethnic group - Arab
				WHEN 41 THEN 12 --Bangladeshi > Asian/Asian Black - Bangladeshi
				WHEN 45 THEN 16 --Caribbean > Black/African/Caribbean - Caribbean
				WHEN 42 THEN 13 --Chinese > Asian/Asian Black - Chinese
				WHEN 31 THEN 1 --English / Welsh / Scottish / Northern Irish / British > White - English/Welsh/Scottish/Northern Irish/British
				WHEN 33 THEN 3 --Gypsy or Irish Traveller > White - Gypsy or Irish Traveller
				WHEN 39 THEN 10 --Indian > Asian/Asian Black - Indian
				WHEN 32 THEN 2 --Irish > White - Irish
				WHEN 99 THEN 20 --Not provided > Not Provided
				WHEN 40 THEN 11 --Pakistani > Asian/Asian Black - Pakistani
				WHEN 37 THEN 5 --White and Asian > White - Any other white background
				WHEN 36 THEN 5 --White and Black African > White - Any other white background
				WHEN 35 THEN 5 --White and Black Caribbean > White - Any other white background
				ELSE NULL
			END,
		NationalInsuranceNumber = P.NI_NUMBER,
		CandidateRegistrationStatusID = @CandidateRegistrationStatusID,--2 = Pending
		LivingAtAddressSince = AD.START_DATE,
		LSNeedsDifficulty = CAST ( CASE WHEN COALESCE ( LI.LEARN_DIFF, P.LEARN_DIFF, 9 ) = '1' THEN 1 ELSE 0 END AS BIT ),
		InCare = CAST ( CASE WHEN COALESCE ( PAD.IS_IN_CARE, 'N' ) = 'Y' THEN 1 ELSE 0 END AS BIT ),
		LeftCareRecently = CAST ( NULL AS BIT ),
		SchoolLastAttended = SCH.FULL_NAME,
		CandidateEthnicityILRCode = P.ETHNICITY,
		ArcCardNumber = NULL,
		ArcCardIssueDate = NULL,
		LocalAuthorityReference = NULL,
		LocalAuthorityIssueDate = NULL,
		PassportNumber = P.PASSPORT_NO,
		PassportIssueDate = NULL,
		FamilyMemberName = P.FES_NEXT_OF_KIN,
		EndorsementReference = NULL,
		DrivingLicenceNumber = NULL,
		NASCandidateID = NULL,
		BirthCertificateNumber = NULL,
		OfficialUseEUCitizen = CAST ( NULL AS BIT ),
		OfficialUseOtherEvidence = P.LRS_OTHER_VERIFICATION_DESC,
		OfficialUseEvidenceEmpEgPaye = VER.FES_LONG_DESCRIPTION,
		SignedUpDate = P.CREATED_DATE,
		StudyAtAnotherCollege = CAST ( 0 AS BIT ),
		StudyAtAnotherCollegeName = NULL,
		HomeAddressCountryCodeID = 
			CASE
				COU.CODE
				WHEN 'AF' THEN 30 --Afghanistan > Afghanistan
				WHEN 'XQ' THEN 31 --Africa not otherwise specified > Africa Not Otherwise Specified
				WHEN 'AX' THEN 32 --Aland Islands {Ahvenanmaa} > Aland Islands
				WHEN 'AL' THEN 33 --Albania > Albania
				WHEN 'DZ' THEN 34 --Algeria > Algeria
				WHEN 'AS' THEN 35 --American Samoa > American Samoa
				WHEN 'AD' THEN 36 --Andorra > Andorra
				WHEN 'AO' THEN 37 --Angola > Angola
				WHEN 'AI' THEN 38 --Anguilla > Anguilla
				WHEN 'XX' THEN 40 --Antarctica and Oceania not otherwise specified > Antarctica And Oceania Not Otherwise Specified
				WHEN 'AG' THEN 41 --Antigua and Barbuda > Antigua And Barbuda
				WHEN 'AR' THEN 42 --Argentina > Argentina
				WHEN 'AM' THEN 43 --Armenia > Armenia
				WHEN 'AW' THEN 44 --Aruba > Aruba
				WHEN 'XS' THEN 45 --Asia (Except Middle East) not otherwise specified > Asia (Except Middle East) Not Otherwise Specified
				WHEN 'AU' THEN 46 --Australia > Australia
				WHEN 'AT' THEN 47 --Austria > Austria
				WHEN 'AZ' THEN 48 --Azerbaijan > Azerbaijan
				WHEN 'BS' THEN 49 --Bahamas, The > Bahamas, The
				WHEN 'BH' THEN 50 --Bahrain > Bahrain
				WHEN 'BD' THEN 51 --Bangladesh > Bangladesh
				WHEN 'BB' THEN 52 --Barbados > Barbados
				WHEN 'BY' THEN 53 --Belarus > Belarus
				WHEN 'BE' THEN 54 --Belgium > Belgium
				WHEN 'BZ' THEN 55 --Belize > Belize
				WHEN 'BJ' THEN 56 --Benin > Benin
				WHEN 'BM' THEN 57 --Bermuda > Bermuda
				WHEN 'BT' THEN 58 --Bhutan > Bhutan
				WHEN 'BO' THEN 59 --Bolivia > Bolivia
				WHEN 'BQ' THEN 60 --Bonaire, Sint Eustatius and Saba > Bonaire, Sint Eustatius and Saba
				WHEN 'BA' THEN 61 --Bosnia and Herzegovina > Bosnia And Herzegovina
				WHEN 'BW' THEN 62 --Botswana > Botswana
				WHEN 'BR' THEN 64 --Brazil > Brazil
				WHEN 'VG' THEN 66 --British Virgin Islands [Virgin Islands, British] > British Virgin Islands
				WHEN 'BN' THEN 67 --Brunei [Brunei Darussalam] > Brunei
				WHEN 'BG' THEN 68 --Bulgaria > Bulgaria
				WHEN 'BF' THEN 69 --Burkina [Burkina Faso] > Burkina
				WHEN 'MM' THEN 70 --Burma [Myanmar] > Burma
				WHEN 'BI' THEN 71 --Burundi > Burundi
				WHEN 'KH' THEN 72 --Cambodia > Cambodia
				WHEN 'CM' THEN 73 --Cameroon > Cameroon
				WHEN 'CA' THEN 74 --Canada > Canada
				WHEN 'IC' THEN 75 --Canary Islands > Canary Islands
				WHEN 'CV' THEN 76 --Cape Verde > Cape Verde
				WHEN 'XW' THEN 77 --Caribbean not otherwise specified > Caribbean Not Otherwise Specified
				WHEN 'KY' THEN 78 --Cayman Islands > Cayman Islands
				WHEN 'CF' THEN 79 --Central African Republic > Central African Republic
				WHEN 'XU' THEN 80 --Central America not otherwise specified > Central America Not Otherwise Specified
				WHEN 'TD' THEN 81 --Chad > Chad
				WHEN 'XL' THEN 83 --Channel Islands not otherwise specified > Channel Islands Not Otherwise Specified
				WHEN 'CL' THEN 84 --Chile > Chile
				WHEN 'CN' THEN 85 --China > China
				WHEN 'CX' THEN 87 --Christmas Island > Christmas Island
				WHEN 'CC' THEN 88 --Cocos (Keeling) Islands > Cocos (Keeling) Islands
				WHEN 'CO' THEN 89 --Colombia > Colombia
				WHEN 'KM' THEN 90 --Comoros > Comoros
				WHEN 'CG' THEN 91 --Congo > Congo
				WHEN 'CD' THEN 92 --Congo (Democratic Republic) [Congo (The Democratic Republic of the)] {formerly Zaire} > Congo (Democratic Republic)
				WHEN 'CK' THEN 93 --Cook Islands > Cook Islands
				WHEN 'CR' THEN 94 --Costa Rica > Costa Rica
				WHEN 'HR' THEN 95 --Croatia > Croatia
				WHEN 'CU' THEN 96 --Cuba > Cuba
				WHEN 'CW' THEN 97 --Curacao > Curacao
				WHEN 'XA' THEN 99 --Cyprus (European Union) > Cyprus (European Union)
				WHEN 'XB' THEN 100 --Cyprus (Non-European Union) > Cyprus (Non-European Union)
				WHEN 'XC' THEN 101 --Cyprus not otherwise specified > Cyprus Not Otherwise Specified
				WHEN 'CZ' THEN 102 --Czech Republic > Czech Republic
				WHEN 'DK' THEN 104 --Denmark > Denmark
				WHEN 'DJ' THEN 105 --Djibouti > Djibouti
				WHEN 'DM' THEN 106 --Dominica > Dominica
				WHEN 'DO' THEN 107 --Dominican Republic > Dominican Republic
				WHEN 'TL' THEN 108 --East Timor [Timor Leste] > East Timor
				WHEN 'EC' THEN 109 --Ecuador > Ecuador
				WHEN 'EG' THEN 110 --Egypt > Egypt
				WHEN 'SV' THEN 111 --El Salvador > El Salvador
				WHEN 'XF' THEN 112 --England > England
				WHEN 'GQ' THEN 113 --Equatorial Guinea > Equatorial Guinea
				WHEN 'ER' THEN 114 --Eritrea > Eritrea
				WHEN 'EE' THEN 115 --Estonia > Estonia
				WHEN 'ET' THEN 116 --Ethiopia > Ethiopia
				WHEN 'XP' THEN 117 --Europe not otherwise specified > Europe Not Otherwise Specified
				WHEN 'EU' THEN 118 --European Union not otherwise specified > European Union not otherwise specified
				WHEN 'FK' THEN 119 --Falkland Islands [Falkland Islands (Malvinas)] > Falkland Islands
				WHEN 'FO' THEN 120 --Faroe Islands > Faroe Islands
				WHEN 'FJ' THEN 121 --Fiji > Fiji
				WHEN 'FI' THEN 122 --Finland > Finland
				WHEN 'FR' THEN 123 --France {includes Corsica} > France
				WHEN 'GF' THEN 124 --French Guiana > French Guiana
				WHEN 'PF' THEN 125 --French Polynesia > French Polynesia
				WHEN 'GA' THEN 127 --Gabon > Gabon
				WHEN 'GM' THEN 128 --Gambia, The > Gambia, The
				WHEN 'GE' THEN 129 --Georgia > Georgia
				WHEN 'DE' THEN 130 --Germany > Germany
				WHEN 'GH' THEN 131 --Ghana > Ghana
				WHEN 'GI' THEN 132 --Gibraltar > Gibraltar
				WHEN 'GR' THEN 133 --Greece > Greece
				WHEN 'GL' THEN 134 --Greenland > Greenland
				WHEN 'GD' THEN 135 --Grenada > Grenada
				WHEN 'GP' THEN 136 --Guadeloupe > Guadeloupe
				WHEN 'GU' THEN 137 --Guam > Guam
				WHEN 'GT' THEN 138 --Guatemala > Guatemala
				WHEN 'GG' THEN 139 --Guernsey > Guernsey
				WHEN 'GN' THEN 140 --Guinea > Guinea
				WHEN 'GW' THEN 141 --Guinea-Bissau > Guinea-Bissau
				WHEN 'GY' THEN 142 --Guyana > Guyana
				WHEN 'HT' THEN 143 --Haiti > Haiti
				WHEN 'HN' THEN 145 --Honduras > Honduras
				WHEN 'HK' THEN 146 --Hong Kong (Special Administrative Region of China) [Hong Kong] > Hong Kong (Special Administrative Region Of China)
				WHEN 'HU' THEN 147 --Hungary > Hungary
				WHEN 'IS' THEN 148 --Iceland > Iceland
				WHEN 'IN' THEN 149 --India > India
				WHEN 'ID' THEN 150 --Indonesia > Indonesia
				WHEN 'IR' THEN 151 --Iran [Iran, Islamic Republic of] > Iran
				WHEN 'IQ' THEN 152 --Iraq > Iraq
				WHEN 'IE' THEN 153 --Ireland > Ireland
				WHEN 'IM' THEN 154 --Isle of Man > Isle Of Man
				WHEN 'IL' THEN 155 --Israel > Israel
				WHEN 'IT' THEN 156 --Italy {Includes Sardinia, Sicily} > Italy
				WHEN 'CI' THEN 157 --Ivory Coast [Cote D'ivoire] > Ivory Coast
				WHEN 'JM' THEN 158 --Jamaica > Jamaica
				WHEN 'JP' THEN 159 --Japan > Japan
				WHEN 'JE' THEN 160 --Jersey > Jersey
				WHEN 'JO' THEN 161 --Jordan > Jordan
				WHEN 'KZ' THEN 162 --Kazakhstan > Kazakhstan
				WHEN 'KE' THEN 163 --Kenya > Kenya
				WHEN 'KI' THEN 164 --Kiribati > Kiribati
				WHEN 'KP' THEN 165 --Korea (North) [Korea, Democratic People's Republic of] > Korea (North)
				WHEN 'KR' THEN 166 --Korea (South) [Korea, Republic of] > Korea (South) > Korea (South)
				WHEN 'QO' THEN 167 --Kosovo > Kosovo
				WHEN 'KW' THEN 168 --Kuwait > Kuwait
				WHEN 'KG' THEN 169 --Kyrgyzstan > Kyrgyzstan
				WHEN 'LA' THEN 170 --Laos [Lao People's Democratic Republic] > Laos
				WHEN 'LV' THEN 171 --Latvia > Latvia
				WHEN 'LB' THEN 172 --Lebanon > Lebanon
				WHEN 'LS' THEN 173 --Lesotho > Lesotho
				WHEN 'LR' THEN 174 --Liberia > Liberia
				WHEN 'LY' THEN 175 --Libya [Libyan Arab Jamahiriya] > Libya
				WHEN 'LI' THEN 176 --Liechtenstein > Liechtenstein
				WHEN 'LT' THEN 177 --Lithuania > Lithuania
				WHEN 'LU' THEN 178 --Luxembourg > Luxembourg
				WHEN 'MO' THEN 179 --Macao (Special Administrative Region of China) [Macao] > Macao (special Administrative Region Of China)
				WHEN 'MK' THEN 180 --Macedonia [Macedonia, The Former Yugoslav Republic of] > Macedonia
				WHEN 'MG' THEN 181 --Madagascar > Madagascar
				WHEN 'MW' THEN 182 --Malawi > Malawi
				WHEN 'MY' THEN 183 --Malaysia > Malaysia
				WHEN 'MV' THEN 184 --Maldives > Maldives
				WHEN 'ML' THEN 185 --Mali > Mali
				WHEN 'MT' THEN 186 --Malta > Malta
				WHEN 'MH' THEN 187 --Marshall Islands > Marshall Islands
				WHEN 'MQ' THEN 188 --Martinique > Martinique
				WHEN 'MR' THEN 189 --Mauritania > Mauritania
				WHEN 'MU' THEN 190 --Mauritius > Mauritius
				WHEN 'YT' THEN 191 --Mayotte > Mayotte
				WHEN 'MX' THEN 192 --Mexico > Mexico
				WHEN 'FM' THEN 193 --Micronesia [Micronesia, Federated States of] > Micronesia
				WHEN 'XR' THEN 194 --Middle East not otherwise specified > Middle East Not Otherwise Specified
				WHEN 'MD' THEN 195 --Moldova [Moldova, Republic of] > Moldova
				WHEN 'MC' THEN 196 --Monaco > Monaco
				WHEN 'MN' THEN 197 --Mongolia > Mongolia
				WHEN 'ME' THEN 198 --Montenegro > Montenegro
				WHEN 'MS' THEN 199 --Montserrat > Montserrat
				WHEN 'MA' THEN 200 --Morocco > Morocco
				WHEN 'MZ' THEN 201 --Mozambique > Mozambique
				WHEN 'NA' THEN 202 --Namibia > Namibia
				WHEN 'NR' THEN 203 --Nauru > Nauru
				WHEN 'NP' THEN 204 --Nepal > Nepal
				WHEN 'NL' THEN 205 --Netherlands > Netherlands
				WHEN 'AN' THEN 206 --Netherlands Antilles > Netherlands Antilles
				WHEN 'NC' THEN 207 --New Caledonia > New Caledonia
				WHEN 'NZ' THEN 208 --New Zealand > New Zealand
				WHEN 'NI' THEN 209 --Nicaragua > Nicaragua
				WHEN 'NE' THEN 210 --Niger > Niger
				WHEN 'NG' THEN 211 --Nigeria > Nigeria
				WHEN 'NU' THEN 212 --Niue > Niue
				WHEN 'NF' THEN 213 --Norfolk Island > Norfolk Island
				WHEN 'XT' THEN 214 --North America not otherwise specified > North America Not Otherwise Specified
				WHEN 'XG' THEN 215 --Northern Ireland > Northern Ireland
				WHEN 'MP' THEN 216 --Northern Mariana Islands > Northern Mariana Islands
				WHEN 'NO' THEN 217 --Norway > Norway
				WHEN 'ZZ' THEN 218 --Not known > Not Known
				WHEN 'PS' THEN 219 --Occupied Palestinian Territories [Palestinian Territory, Occupied] {formerly West Bank (including East Jerusalem) and Gaza Strip} > Occupied Palestinian Territories
				WHEN 'OM' THEN 220 --Oman > Oman
				WHEN 'PK' THEN 221 --Pakistan > Pakistan
				WHEN 'PW' THEN 222 --Palau > Palau
				WHEN 'PA' THEN 223 --Panama > Panama
				WHEN 'PG' THEN 224 --Papua New Guinea > Papua New Guinea
				WHEN 'PY' THEN 225 --Paraguay > Paraguay
				WHEN 'PE' THEN 226 --Peru > Peru
				WHEN 'PH' THEN 227 --Philippines > Philippines
				WHEN 'PN' THEN 228 --Pitcairn, Henderson, Ducie and Oeno Islands [Pitcairn] > Pitcairn, Henderson, Ducie And Oeno Islands
				WHEN 'PL' THEN 229 --Poland > Poland
				WHEN 'PT' THEN 230 --Portugal {includes Madeira, Azores} > Portugal
				WHEN 'PR' THEN 231 --Puerto Rico > Puerto Rico
				WHEN 'QA' THEN 232 --Qatar > Qatar
				WHEN 'RE' THEN 233 --Reunion > Reunion
				WHEN 'RO' THEN 234 --Romania > Romania
				WHEN 'RU' THEN 235 --Russia [Russian Federation] > Russia
				WHEN 'RW' THEN 236 --Rwanda > Rwanda
				WHEN 'WS' THEN 237 --Samoa > Samoa
				WHEN 'SM' THEN 238 --San Marino > San Marino
				WHEN 'ST' THEN 239 --Sao Tome and Principe > Sao Tome And Principe
				WHEN 'SA' THEN 240 --Saudi Arabia > Saudi Arabia
				WHEN 'XH' THEN 241 --Scotland > Scotland
				WHEN 'SN' THEN 242 --Senegal > Senegal
				WHEN 'RS' THEN 243 --Serbia > Serbia
				WHEN 'SC' THEN 245 --Seychelles > Seychelles
				WHEN 'SL' THEN 246 --Sierra Leone > Sierra Leone
				WHEN 'SG' THEN 247 --Singapore > Singapore
				WHEN 'SX' THEN 248 --Sint Maarten (Dutch part) > Sint Maarten (Dutch part)
				WHEN 'SK' THEN 249 --Slovakia > Slovakia
				WHEN 'SI' THEN 250 --Slovenia > Slovenia
				WHEN 'SB' THEN 251 --Solomon Islands > Solomon Islands
				WHEN 'SO' THEN 252 --Somalia > Somalia
				WHEN 'ZA' THEN 253 --South Africa > South Africa
				WHEN 'XV' THEN 254 --South America not otherwise specified > South America Not Otherwise Specified
				WHEN 'GS' THEN 255 --South Georgia and The South Sandwich Islands > South Georgia And The South Sandwich Islands
				WHEN 'SS' THEN 256 --South Sudan > South Sudan
				WHEN 'ES' THEN 257 --Spain {includes Ceuta, Melilla} > Spain
				WHEN 'LK' THEN 260 --Sri Lanka > Sri Lanka
				WHEN 'BL' THEN 261 --St Barthelemy > St Barthelemy
				WHEN 'SH' THEN 262 --St Helena, Ascension and Tristan da Cunha > St Helena, Ascension and Tristan da Cunha
				WHEN 'KN' THEN 263 --St Kitts and Nevis > St Kitts And Nevis
				WHEN 'LC' THEN 264 --St Lucia > St Lucia
				WHEN 'MF' THEN 265 --St Martin (French Part) [St Martin] > St Martin (French Part)
				WHEN 'PM' THEN 266 --St Pierre and Miquelon > St Pierre And Miquelon
				WHEN 'VC' THEN 267 --St Vincent and The Grenadines > St Vincent And The Grenadines
				WHEN 'SD' THEN 268 --Sudan > Sudan
				WHEN 'SR' THEN 269 --Surinam [Suriname] > Surinam
				WHEN 'SJ' THEN 270 --Svalbard and Jan Mayen > Svalbard And Jan Mayen
				WHEN 'SZ' THEN 271 --Swaziland > Swaziland
				WHEN 'SE' THEN 272 --Sweden > Sweden
				WHEN 'CH' THEN 273 --Switzerland > Switzerland
				WHEN 'SY' THEN 274 --Syria [Syrian Arab Republic] > Syria
				WHEN 'TW' THEN 86 --Taiwan [Taiwan, Province of China] > China (Taiwan)
				WHEN 'TJ' THEN 275 --Tajikistan > Tajikistan
				WHEN 'TZ' THEN 276 --Tanzania [Tanzania, United Republic of] > Tanzania
				WHEN 'TH' THEN 277 --Thailand > Thailand
				WHEN 'TG' THEN 278 --Togo > Togo
				WHEN 'TK' THEN 279 --Tokelau > Tokelau
				WHEN 'TO' THEN 280 --Tonga > Tonga
				WHEN 'TT' THEN 281 --Trinidad and Tobago > Trinidad And Tobago
				WHEN 'TN' THEN 282 --Tunisia > Tunisia
				WHEN 'TR' THEN 283 --Turkey > Turkey
				WHEN 'TM' THEN 284 --Turkmenistan > Turkmenistan
				WHEN 'TC' THEN 285 --Turks and Caicos Islands > Turks And Caicos Islands
				WHEN 'TV' THEN 286 --Tuvalu > Tuvalu
				WHEN 'UG' THEN 287 --Uganda > Uganda
				WHEN 'UA' THEN 288 --Ukraine > Ukraine
				WHEN 'AE' THEN 290 --United Arab Emirates > United Arab Emirates
				WHEN 'XK' THEN 292 --United Kingdom, not otherwise specified > United Kingdom Not Otherwise Specified
				WHEN 'US' THEN 293 --United States > United States
				WHEN 'VI' THEN 295 --United States Virgin Islands [Virgin Islands, U. S.] > United States Virgin Islands
				WHEN 'UY' THEN 296 --Uruguay > Uruguay
				WHEN 'UZ' THEN 297 --Uzbekistan > Uzbekistan
				WHEN 'VU' THEN 298 --Vanuatu > Vanuatu
				WHEN 'VA' THEN 299 --Vatican City [Holy See (Vatican City State)] > Vatican City
				WHEN 'VE' THEN 300 --Venezuela > Venezuela
				WHEN 'VN' THEN 301 --Vietnam [Viet Nam] > Vietnam
				WHEN 'XI' THEN 302 --Wales > Wales
				WHEN 'WF' THEN 303 --Wallis and Futuna > Wallis And Futuna
				WHEN 'EH' THEN 305 --Western Sahara > Western Sahara
				WHEN 'YE' THEN 306 --Yemen > Yemen
				WHEN 'ZM' THEN 308 --Zambia > Zambia
				WHEN 'ZW' THEN 309 --Zimbabwe > Zimbabwe
				ELSE NULL
			END,
		HomeAddressCountry = 
			CASE
				COU.CODE
				WHEN 'AF' THEN 'Afghanistan'
				WHEN 'XQ' THEN 'Africa Not Otherwise Specified'
				WHEN 'AX' THEN 'Aland Islands'
				WHEN 'AL' THEN 'Albania'
				WHEN 'DZ' THEN 'Algeria'
				WHEN 'AS' THEN 'American Samoa'
				WHEN 'AD' THEN 'Andorra'
				WHEN 'AO' THEN 'Angola'
				WHEN 'AI' THEN 'Anguilla'
				WHEN 'XX' THEN 'Antarctica And Oceania Not Otherwise Specified'
				WHEN 'AG' THEN 'Antigua And Barbuda'
				WHEN 'AR' THEN 'Argentina'
				WHEN 'AM' THEN 'Armenia'
				WHEN 'AW' THEN 'Aruba'
				WHEN 'XS' THEN 'Asia (Except Middle East) Not Otherwise Specified'
				WHEN 'AU' THEN 'Australia'
				WHEN 'AT' THEN 'Austria'
				WHEN 'AZ' THEN 'Azerbaijan'
				WHEN 'BS' THEN 'Bahamas, The'
				WHEN 'BH' THEN 'Bahrain'
				WHEN 'BD' THEN 'Bangladesh'
				WHEN 'BB' THEN 'Barbados'
				WHEN 'BY' THEN 'Belarus'
				WHEN 'BE' THEN 'Belgium'
				WHEN 'BZ' THEN 'Belize'
				WHEN 'BJ' THEN 'Benin'
				WHEN 'BM' THEN 'Bermuda'
				WHEN 'BT' THEN 'Bhutan'
				WHEN 'BO' THEN 'Bolivia'
				WHEN 'BQ' THEN 'Bonaire, Sint Eustatius and Saba'
				WHEN 'BA' THEN 'Bosnia And Herzegovina'
				WHEN 'BW' THEN 'Botswana'
				WHEN 'BR' THEN 'Brazil'
				WHEN 'VG' THEN 'British Virgin Islands'
				WHEN 'BN' THEN 'Brunei'
				WHEN 'BG' THEN 'Bulgaria'
				WHEN 'BF' THEN 'Burkina'
				WHEN 'MM' THEN 'Burma'
				WHEN 'BI' THEN 'Burundi'
				WHEN 'KH' THEN 'Cambodia'
				WHEN 'CM' THEN 'Cameroon'
				WHEN 'CA' THEN 'Canada'
				WHEN 'IC' THEN 'Canary Islands'
				WHEN 'CV' THEN 'Cape Verde'
				WHEN 'XW' THEN 'Caribbean Not Otherwise Specified'
				WHEN 'KY' THEN 'Cayman Islands'
				WHEN 'CF' THEN 'Central African Republic'
				WHEN 'XU' THEN 'Central America Not Otherwise Specified'
				WHEN 'TD' THEN 'Chad'
				WHEN 'XL' THEN 'Channel Islands Not Otherwise Specified'
				WHEN 'CL' THEN 'Chile'
				WHEN 'CN' THEN 'China'
				WHEN 'CX' THEN 'Christmas Island'
				WHEN 'CC' THEN 'Cocos (Keeling) Islands'
				WHEN 'CO' THEN 'Colombia'
				WHEN 'KM' THEN 'Comoros'
				WHEN 'CG' THEN 'Congo'
				WHEN 'CD' THEN 'Congo (Democratic Republic)'
				WHEN 'CK' THEN 'Cook Islands'
				WHEN 'CR' THEN 'Costa Rica'
				WHEN 'HR' THEN 'Croatia'
				WHEN 'CU' THEN 'Cuba'
				WHEN 'CW' THEN 'Curacao'
				WHEN 'XA' THEN 'Cyprus (European Union)'
				WHEN 'XB' THEN 'Cyprus (Non-European Union)'
				WHEN 'XC' THEN 'Cyprus Not Otherwise Specified'
				WHEN 'CZ' THEN 'Czech Republic'
				WHEN 'DK' THEN 'Denmark'
				WHEN 'DJ' THEN 'Djibouti'
				WHEN 'DM' THEN 'Dominica'
				WHEN 'DO' THEN 'Dominican Republic'
				WHEN 'TL' THEN 'East Timor'
				WHEN 'EC' THEN 'Ecuador'
				WHEN 'EG' THEN 'Egypt'
				WHEN 'SV' THEN 'El Salvador'
				WHEN 'XF' THEN 'England'
				WHEN 'GQ' THEN 'Equatorial Guinea'
				WHEN 'ER' THEN 'Eritrea'
				WHEN 'EE' THEN 'Estonia'
				WHEN 'ET' THEN 'Ethiopia'
				WHEN 'XP' THEN 'Europe Not Otherwise Specified'
				WHEN 'EU' THEN 'European Union not otherwise specified'
				WHEN 'FK' THEN 'Falkland Islands'
				WHEN 'FO' THEN 'Faroe Islands'
				WHEN 'FJ' THEN 'Fiji'
				WHEN 'FI' THEN 'Finland'
				WHEN 'FR' THEN 'France'
				WHEN 'GF' THEN 'French Guiana'
				WHEN 'PF' THEN 'French Polynesia'
				WHEN 'GA' THEN 'Gabon'
				WHEN 'GM' THEN 'Gambia, The'
				WHEN 'GE' THEN 'Georgia'
				WHEN 'DE' THEN 'Germany'
				WHEN 'GH' THEN 'Ghana'
				WHEN 'GI' THEN 'Gibraltar'
				WHEN 'GR' THEN 'Greece'
				WHEN 'GL' THEN 'Greenland'
				WHEN 'GD' THEN 'Grenada'
				WHEN 'GP' THEN 'Guadeloupe'
				WHEN 'GU' THEN 'Guam'
				WHEN 'GT' THEN 'Guatemala'
				WHEN 'GG' THEN 'Guernsey'
				WHEN 'GN' THEN 'Guinea'
				WHEN 'GW' THEN 'Guinea-Bissau'
				WHEN 'GY' THEN 'Guyana'
				WHEN 'HT' THEN 'Haiti'
				WHEN 'HN' THEN 'Honduras'
				WHEN 'HK' THEN 'Hong Kong (Special Administrative Region Of China)'
				WHEN 'HU' THEN 'Hungary'
				WHEN 'IS' THEN 'Iceland'
				WHEN 'IN' THEN 'India'
				WHEN 'ID' THEN 'Indonesia'
				WHEN 'IR' THEN 'Iran'
				WHEN 'IQ' THEN 'Iraq'
				WHEN 'IE' THEN 'Ireland'
				WHEN 'IM' THEN 'Isle Of Man'
				WHEN 'IL' THEN 'Israel'
				WHEN 'IT' THEN 'Italy'
				WHEN 'CI' THEN 'Ivory Coast'
				WHEN 'JM' THEN 'Jamaica'
				WHEN 'JP' THEN 'Japan'
				WHEN 'JE' THEN 'Jersey'
				WHEN 'JO' THEN 'Jordan'
				WHEN 'KZ' THEN 'Kazakhstan'
				WHEN 'KE' THEN 'Kenya'
				WHEN 'KI' THEN 'Kiribati'
				WHEN 'KP' THEN 'Korea (North)'
				WHEN 'KR' THEN 'Korea (South)'
				WHEN 'QO' THEN 'Kosovo'
				WHEN 'KW' THEN 'Kuwait'
				WHEN 'KG' THEN 'Kyrgyzstan'
				WHEN 'LA' THEN 'Laos'
				WHEN 'LV' THEN 'Latvia'
				WHEN 'LB' THEN 'Lebanon'
				WHEN 'LS' THEN 'Lesotho'
				WHEN 'LR' THEN 'Liberia'
				WHEN 'LY' THEN 'Libya'
				WHEN 'LI' THEN 'Liechtenstein'
				WHEN 'LT' THEN 'Lithuania'
				WHEN 'LU' THEN 'Luxembourg'
				WHEN 'MO' THEN 'Macao (special Administrative Region Of China)'
				WHEN 'MK' THEN 'Macedonia'
				WHEN 'MG' THEN 'Madagascar'
				WHEN 'MW' THEN 'Malawi'
				WHEN 'MY' THEN 'Malaysia'
				WHEN 'MV' THEN 'Maldives'
				WHEN 'ML' THEN 'Mali'
				WHEN 'MT' THEN 'Malta'
				WHEN 'MH' THEN 'Marshall Islands'
				WHEN 'MQ' THEN 'Martinique'
				WHEN 'MR' THEN 'Mauritania'
				WHEN 'MU' THEN 'Mauritius'
				WHEN 'YT' THEN 'Mayotte'
				WHEN 'MX' THEN 'Mexico'
				WHEN 'FM' THEN 'Micronesia'
				WHEN 'XR' THEN 'Middle East Not Otherwise Specified'
				WHEN 'MD' THEN 'Moldova'
				WHEN 'MC' THEN 'Monaco'
				WHEN 'MN' THEN 'Mongolia'
				WHEN 'ME' THEN 'Montenegro'
				WHEN 'MS' THEN 'Montserrat'
				WHEN 'MA' THEN 'Morocco'
				WHEN 'MZ' THEN 'Mozambique'
				WHEN 'NA' THEN 'Namibia'
				WHEN 'NR' THEN 'Nauru'
				WHEN 'NP' THEN 'Nepal'
				WHEN 'NL' THEN 'Netherlands'
				WHEN 'AN' THEN 'Netherlands Antilles'
				WHEN 'NC' THEN 'New Caledonia'
				WHEN 'NZ' THEN 'New Zealand'
				WHEN 'NI' THEN 'Nicaragua'
				WHEN 'NE' THEN 'Niger'
				WHEN 'NG' THEN 'Nigeria'
				WHEN 'NU' THEN 'Niue'
				WHEN 'NF' THEN 'Norfolk Island'
				WHEN 'XT' THEN 'North America Not Otherwise Specified'
				WHEN 'XG' THEN 'Northern Ireland'
				WHEN 'MP' THEN 'Northern Mariana Islands'
				WHEN 'NO' THEN 'Norway'
				WHEN 'ZZ' THEN 'Not Known'
				WHEN 'PS' THEN 'Occupied Palestinian Territories'
				WHEN 'OM' THEN 'Oman'
				WHEN 'PK' THEN 'Pakistan'
				WHEN 'PW' THEN 'Palau'
				WHEN 'PA' THEN 'Panama'
				WHEN 'PG' THEN 'Papua New Guinea'
				WHEN 'PY' THEN 'Paraguay'
				WHEN 'PE' THEN 'Peru'
				WHEN 'PH' THEN 'Philippines'
				WHEN 'PN' THEN 'Pitcairn, Henderson, Ducie And Oeno Islands'
				WHEN 'PL' THEN 'Poland'
				WHEN 'PT' THEN 'Portugal'
				WHEN 'PR' THEN 'Puerto Rico'
				WHEN 'QA' THEN 'Qatar'
				WHEN 'RE' THEN 'Reunion'
				WHEN 'RO' THEN 'Romania'
				WHEN 'RU' THEN 'Russia'
				WHEN 'RW' THEN 'Rwanda'
				WHEN 'WS' THEN 'Samoa'
				WHEN 'SM' THEN 'San Marino'
				WHEN 'ST' THEN 'Sao Tome And Principe'
				WHEN 'SA' THEN 'Saudi Arabia'
				WHEN 'XH' THEN 'Scotland'
				WHEN 'SN' THEN 'Senegal'
				WHEN 'RS' THEN 'Serbia'
				WHEN 'SC' THEN 'Seychelles'
				WHEN 'SL' THEN 'Sierra Leone'
				WHEN 'SG' THEN 'Singapore'
				WHEN 'SX' THEN 'Sint Maarten (Dutch part)'
				WHEN 'SK' THEN 'Slovakia'
				WHEN 'SI' THEN 'Slovenia'
				WHEN 'SB' THEN 'Solomon Islands'
				WHEN 'SO' THEN 'Somalia'
				WHEN 'ZA' THEN 'South Africa'
				WHEN 'XV' THEN 'South America Not Otherwise Specified'
				WHEN 'GS' THEN 'South Georgia And The South Sandwich Islands'
				WHEN 'SS' THEN 'South Sudan'
				WHEN 'ES' THEN 'Spain'
				WHEN 'LK' THEN 'Sri Lanka'
				WHEN 'BL' THEN 'St Barthelemy'
				WHEN 'SH' THEN 'St Helena, Ascension and Tristan da Cunha'
				WHEN 'KN' THEN 'St Kitts And Nevis'
				WHEN 'LC' THEN 'St Lucia'
				WHEN 'MF' THEN 'St Martin (French Part)'
				WHEN 'PM' THEN 'St Pierre And Miquelon'
				WHEN 'VC' THEN 'St Vincent And The Grenadines'
				WHEN 'SD' THEN 'Sudan'
				WHEN 'SR' THEN 'Surinam'
				WHEN 'SJ' THEN 'Svalbard And Jan Mayen'
				WHEN 'SZ' THEN 'Swaziland'
				WHEN 'SE' THEN 'Sweden'
				WHEN 'CH' THEN 'Switzerland'
				WHEN 'SY' THEN 'Syria'
				WHEN 'TW' THEN 'China (Taiwan)'
				WHEN 'TJ' THEN 'Tajikistan'
				WHEN 'TZ' THEN'Tanzania'
				WHEN 'TH' THEN 'Thailand'
				WHEN 'TG' THEN 'Togo'
				WHEN 'TK' THEN 'Tokelau'
				WHEN 'TO' THEN 'Tonga'
				WHEN 'TT' THEN 'Trinidad And Tobago'
				WHEN 'TN' THEN 'Tunisia'
				WHEN 'TR' THEN 'Turkey'
				WHEN 'TM' THEN 'Turkmenistan'
				WHEN 'TC' THEN 'Turks And Caicos Islands'
				WHEN 'TV' THEN 'Tuvalu'
				WHEN 'UG' THEN 'Uganda'
				WHEN 'UA' THEN 'Ukraine'
				WHEN 'AE' THEN 'United Arab Emirates'
				WHEN 'XK' THEN 'United Kingdom Not Otherwise Specified'
				WHEN 'US' THEN 'United States'
				WHEN 'VI' THEN 'United States Virgin Islands'
				WHEN 'UY' THEN 'Uruguay'
				WHEN 'UZ' THEN 'Uzbekistan'
				WHEN 'VU' THEN 'Vanuatu'
				WHEN 'VA' THEN 'Vatican City'
				WHEN 'VE' THEN'Venezuela'
				WHEN 'VN' THEN 'Vietnam'
				WHEN 'XI' THEN 'Wales'
				WHEN 'WF' THEN 'Wallis And Futuna'
				WHEN 'EH' THEN 'Western Sahara'
				WHEN 'YE' THEN 'Yemen'
				WHEN 'ZM' THEN 'Zambia'
				WHEN 'ZW' THEN 'Zimbabwe'
				ELSE NULL
			END,
		SexualOrientation = NULL,
		SexualOrientationSelfDescribe = NULL,
		ParentGuardianName = P.FES_NEXT_OF_KIN,
		ParentGuardianHomeAddress = 
			ADC.ADDRESS_LINE_1
			+ CASE WHEN LEN ( ADC.ADDRESS_LINE_2 ) > 0 THEN ', ' + ADC.ADDRESS_LINE_2 ELSE '' END
			+ CASE WHEN LEN ( ADC.ADDRESS_LINE_3 ) > 0 THEN ', ' + ADC.ADDRESS_LINE_3 ELSE '' END
			+ CASE WHEN LEN ( ADC.ADDRESS_LINE_4 ) > 0 THEN ', ' + ADC.ADDRESS_LINE_4 ELSE '' END
			+ CASE WHEN LEN ( ADC.ADDRESS_LINE_5 ) > 0 THEN ', ' + ADC.ADDRESS_LINE_5 ELSE '' END
			+ CASE WHEN LEN ( ADC.ADDRESS_LINE_5 ) > 0 THEN ', ' + ADC.TOWN ELSE '' END,
		ParentGuardianHomePostCode = ADC.UK_POST_CODE_PT1 + ' ' + ADC.UK_POST_CODE_PT2,
		ParentGuardianTelNumber = P.FES_NOK_CONTACT_NO,
		ParentGuardianEmail = P.FES_USER_7,
		CountryOfNationalityID = 
			CASE
				NAT.CODE
				WHEN 'AF' THEN 30 --Afghanistan > Afghanistan
				WHEN 'XQ' THEN 31 --Africa not otherwise specified > Africa Not Otherwise Specified
				WHEN 'AX' THEN 32 --Aland Islands {Ahvenanmaa} > Aland Islands
				WHEN 'AL' THEN 33 --Albania > Albania
				WHEN 'DZ' THEN 34 --Algeria > Algeria
				WHEN 'AS' THEN 35 --American Samoa > American Samoa
				WHEN 'AD' THEN 36 --Andorra > Andorra
				WHEN 'AO' THEN 37 --Angola > Angola
				WHEN 'AI' THEN 38 --Anguilla > Anguilla
				WHEN 'XX' THEN 40 --Antarctica and Oceania not otherwise specified > Antarctica And Oceania Not Otherwise Specified
				WHEN 'AG' THEN 41 --Antigua and Barbuda > Antigua And Barbuda
				WHEN 'AR' THEN 42 --Argentina > Argentina
				WHEN 'AM' THEN 43 --Armenia > Armenia
				WHEN 'AW' THEN 44 --Aruba > Aruba
				WHEN 'XS' THEN 45 --Asia (Except Middle East) not otherwise specified > Asia (Except Middle East) Not Otherwise Specified
				WHEN 'AU' THEN 46 --Australia > Australia
				WHEN 'AT' THEN 47 --Austria > Austria
				WHEN 'AZ' THEN 48 --Azerbaijan > Azerbaijan
				WHEN 'BS' THEN 49 --Bahamas, The > Bahamas, The
				WHEN 'BH' THEN 50 --Bahrain > Bahrain
				WHEN 'BD' THEN 51 --Bangladesh > Bangladesh
				WHEN 'BB' THEN 52 --Barbados > Barbados
				WHEN 'BY' THEN 53 --Belarus > Belarus
				WHEN 'BE' THEN 54 --Belgium > Belgium
				WHEN 'BZ' THEN 55 --Belize > Belize
				WHEN 'BJ' THEN 56 --Benin > Benin
				WHEN 'BM' THEN 57 --Bermuda > Bermuda
				WHEN 'BT' THEN 58 --Bhutan > Bhutan
				WHEN 'BO' THEN 59 --Bolivia > Bolivia
				WHEN 'BQ' THEN 60 --Bonaire, Sint Eustatius and Saba > Bonaire, Sint Eustatius and Saba
				WHEN 'BA' THEN 61 --Bosnia and Herzegovina > Bosnia And Herzegovina
				WHEN 'BW' THEN 62 --Botswana > Botswana
				WHEN 'BR' THEN 64 --Brazil > Brazil
				WHEN 'VG' THEN 66 --British Virgin Islands [Virgin Islands, British] > British Virgin Islands
				WHEN 'BN' THEN 67 --Brunei [Brunei Darussalam] > Brunei
				WHEN 'BG' THEN 68 --Bulgaria > Bulgaria
				WHEN 'BF' THEN 69 --Burkina [Burkina Faso] > Burkina
				WHEN 'MM' THEN 70 --Burma [Myanmar] > Burma
				WHEN 'BI' THEN 71 --Burundi > Burundi
				WHEN 'KH' THEN 72 --Cambodia > Cambodia
				WHEN 'CM' THEN 73 --Cameroon > Cameroon
				WHEN 'CA' THEN 74 --Canada > Canada
				WHEN 'IC' THEN 75 --Canary Islands > Canary Islands
				WHEN 'CV' THEN 76 --Cape Verde > Cape Verde
				WHEN 'XW' THEN 77 --Caribbean not otherwise specified > Caribbean Not Otherwise Specified
				WHEN 'KY' THEN 78 --Cayman Islands > Cayman Islands
				WHEN 'CF' THEN 79 --Central African Republic > Central African Republic
				WHEN 'XU' THEN 80 --Central America not otherwise specified > Central America Not Otherwise Specified
				WHEN 'TD' THEN 81 --Chad > Chad
				WHEN 'XL' THEN 83 --Channel Islands not otherwise specified > Channel Islands Not Otherwise Specified
				WHEN 'CL' THEN 84 --Chile > Chile
				WHEN 'CN' THEN 85 --China > China
				WHEN 'CX' THEN 87 --Christmas Island > Christmas Island
				WHEN 'CC' THEN 88 --Cocos (Keeling) Islands > Cocos (Keeling) Islands
				WHEN 'CO' THEN 89 --Colombia > Colombia
				WHEN 'KM' THEN 90 --Comoros > Comoros
				WHEN 'CG' THEN 91 --Congo > Congo
				WHEN 'CD' THEN 92 --Congo (Democratic Republic) [Congo (The Democratic Republic of the)] {formerly Zaire} > Congo (Democratic Republic)
				WHEN 'CK' THEN 93 --Cook Islands > Cook Islands
				WHEN 'CR' THEN 94 --Costa Rica > Costa Rica
				WHEN 'HR' THEN 95 --Croatia > Croatia
				WHEN 'CU' THEN 96 --Cuba > Cuba
				WHEN 'CW' THEN 97 --Curacao > Curacao
				WHEN 'XA' THEN 99 --Cyprus (European Union) > Cyprus (European Union)
				WHEN 'XB' THEN 100 --Cyprus (Non-European Union) > Cyprus (Non-European Union)
				WHEN 'XC' THEN 101 --Cyprus not otherwise specified > Cyprus Not Otherwise Specified
				WHEN 'CZ' THEN 102 --Czech Republic > Czech Republic
				WHEN 'DK' THEN 104 --Denmark > Denmark
				WHEN 'DJ' THEN 105 --Djibouti > Djibouti
				WHEN 'DM' THEN 106 --Dominica > Dominica
				WHEN 'DO' THEN 107 --Dominican Republic > Dominican Republic
				WHEN 'TL' THEN 108 --East Timor [Timor Leste] > East Timor
				WHEN 'EC' THEN 109 --Ecuador > Ecuador
				WHEN 'EG' THEN 110 --Egypt > Egypt
				WHEN 'SV' THEN 111 --El Salvador > El Salvador
				WHEN 'XF' THEN 112 --England > England
				WHEN 'GQ' THEN 113 --Equatorial Guinea > Equatorial Guinea
				WHEN 'ER' THEN 114 --Eritrea > Eritrea
				WHEN 'EE' THEN 115 --Estonia > Estonia
				WHEN 'ET' THEN 116 --Ethiopia > Ethiopia
				WHEN 'XP' THEN 117 --Europe not otherwise specified > Europe Not Otherwise Specified
				WHEN 'EU' THEN 118 --European Union not otherwise specified > European Union not otherwise specified
				WHEN 'FK' THEN 119 --Falkland Islands [Falkland Islands (Malvinas)] > Falkland Islands
				WHEN 'FO' THEN 120 --Faroe Islands > Faroe Islands
				WHEN 'FJ' THEN 121 --Fiji > Fiji
				WHEN 'FI' THEN 122 --Finland > Finland
				WHEN 'FR' THEN 123 --France {includes Corsica} > France
				WHEN 'GF' THEN 124 --French Guiana > French Guiana
				WHEN 'PF' THEN 125 --French Polynesia > French Polynesia
				WHEN 'GA' THEN 127 --Gabon > Gabon
				WHEN 'GM' THEN 128 --Gambia, The > Gambia, The
				WHEN 'GE' THEN 129 --Georgia > Georgia
				WHEN 'DE' THEN 130 --Germany > Germany
				WHEN 'GH' THEN 131 --Ghana > Ghana
				WHEN 'GI' THEN 132 --Gibraltar > Gibraltar
				WHEN 'GR' THEN 133 --Greece > Greece
				WHEN 'GL' THEN 134 --Greenland > Greenland
				WHEN 'GD' THEN 135 --Grenada > Grenada
				WHEN 'GP' THEN 136 --Guadeloupe > Guadeloupe
				WHEN 'GU' THEN 137 --Guam > Guam
				WHEN 'GT' THEN 138 --Guatemala > Guatemala
				WHEN 'GG' THEN 139 --Guernsey > Guernsey
				WHEN 'GN' THEN 140 --Guinea > Guinea
				WHEN 'GW' THEN 141 --Guinea-Bissau > Guinea-Bissau
				WHEN 'GY' THEN 142 --Guyana > Guyana
				WHEN 'HT' THEN 143 --Haiti > Haiti
				WHEN 'HN' THEN 145 --Honduras > Honduras
				WHEN 'HK' THEN 146 --Hong Kong (Special Administrative Region of China) [Hong Kong] > Hong Kong (Special Administrative Region Of China)
				WHEN 'HU' THEN 147 --Hungary > Hungary
				WHEN 'IS' THEN 148 --Iceland > Iceland
				WHEN 'IN' THEN 149 --India > India
				WHEN 'ID' THEN 150 --Indonesia > Indonesia
				WHEN 'IR' THEN 151 --Iran [Iran, Islamic Republic of] > Iran
				WHEN 'IQ' THEN 152 --Iraq > Iraq
				WHEN 'IE' THEN 153 --Ireland > Ireland
				WHEN 'IM' THEN 154 --Isle of Man > Isle Of Man
				WHEN 'IL' THEN 155 --Israel > Israel
				WHEN 'IT' THEN 156 --Italy {Includes Sardinia, Sicily} > Italy
				WHEN 'CI' THEN 157 --Ivory Coast [Cote D'ivoire] > Ivory Coast
				WHEN 'JM' THEN 158 --Jamaica > Jamaica
				WHEN 'JP' THEN 159 --Japan > Japan
				WHEN 'JE' THEN 160 --Jersey > Jersey
				WHEN 'JO' THEN 161 --Jordan > Jordan
				WHEN 'KZ' THEN 162 --Kazakhstan > Kazakhstan
				WHEN 'KE' THEN 163 --Kenya > Kenya
				WHEN 'KI' THEN 164 --Kiribati > Kiribati
				WHEN 'KP' THEN 165 --Korea (North) [Korea, Democratic People's Republic of] > Korea (North)
				WHEN 'KR' THEN 166 --Korea (South) [Korea, Republic of] > Korea (South) > Korea (South)
				WHEN 'QO' THEN 167 --Kosovo > Kosovo
				WHEN 'KW' THEN 168 --Kuwait > Kuwait
				WHEN 'KG' THEN 169 --Kyrgyzstan > Kyrgyzstan
				WHEN 'LA' THEN 170 --Laos [Lao People's Democratic Republic] > Laos
				WHEN 'LV' THEN 171 --Latvia > Latvia
				WHEN 'LB' THEN 172 --Lebanon > Lebanon
				WHEN 'LS' THEN 173 --Lesotho > Lesotho
				WHEN 'LR' THEN 174 --Liberia > Liberia
				WHEN 'LY' THEN 175 --Libya [Libyan Arab Jamahiriya] > Libya
				WHEN 'LI' THEN 176 --Liechtenstein > Liechtenstein
				WHEN 'LT' THEN 177 --Lithuania > Lithuania
				WHEN 'LU' THEN 178 --Luxembourg > Luxembourg
				WHEN 'MO' THEN 179 --Macao (Special Administrative Region of China) [Macao] > Macao (special Administrative Region Of China)
				WHEN 'MK' THEN 180 --Macedonia [Macedonia, The Former Yugoslav Republic of] > Macedonia
				WHEN 'MG' THEN 181 --Madagascar > Madagascar
				WHEN 'MW' THEN 182 --Malawi > Malawi
				WHEN 'MY' THEN 183 --Malaysia > Malaysia
				WHEN 'MV' THEN 184 --Maldives > Maldives
				WHEN 'ML' THEN 185 --Mali > Mali
				WHEN 'MT' THEN 186 --Malta > Malta
				WHEN 'MH' THEN 187 --Marshall Islands > Marshall Islands
				WHEN 'MQ' THEN 188 --Martinique > Martinique
				WHEN 'MR' THEN 189 --Mauritania > Mauritania
				WHEN 'MU' THEN 190 --Mauritius > Mauritius
				WHEN 'YT' THEN 191 --Mayotte > Mayotte
				WHEN 'MX' THEN 192 --Mexico > Mexico
				WHEN 'FM' THEN 193 --Micronesia [Micronesia, Federated States of] > Micronesia
				WHEN 'XR' THEN 194 --Middle East not otherwise specified > Middle East Not Otherwise Specified
				WHEN 'MD' THEN 195 --Moldova [Moldova, Republic of] > Moldova
				WHEN 'MC' THEN 196 --Monaco > Monaco
				WHEN 'MN' THEN 197 --Mongolia > Mongolia
				WHEN 'ME' THEN 198 --Montenegro > Montenegro
				WHEN 'MS' THEN 199 --Montserrat > Montserrat
				WHEN 'MA' THEN 200 --Morocco > Morocco
				WHEN 'MZ' THEN 201 --Mozambique > Mozambique
				WHEN 'NA' THEN 202 --Namibia > Namibia
				WHEN 'NR' THEN 203 --Nauru > Nauru
				WHEN 'NP' THEN 204 --Nepal > Nepal
				WHEN 'NL' THEN 205 --Netherlands > Netherlands
				WHEN 'AN' THEN 206 --Netherlands Antilles > Netherlands Antilles
				WHEN 'NC' THEN 207 --New Caledonia > New Caledonia
				WHEN 'NZ' THEN 208 --New Zealand > New Zealand
				WHEN 'NI' THEN 209 --Nicaragua > Nicaragua
				WHEN 'NE' THEN 210 --Niger > Niger
				WHEN 'NG' THEN 211 --Nigeria > Nigeria
				WHEN 'NU' THEN 212 --Niue > Niue
				WHEN 'NF' THEN 213 --Norfolk Island > Norfolk Island
				WHEN 'XT' THEN 214 --North America not otherwise specified > North America Not Otherwise Specified
				WHEN 'XG' THEN 215 --Northern Ireland > Northern Ireland
				WHEN 'MP' THEN 216 --Northern Mariana Islands > Northern Mariana Islands
				WHEN 'NO' THEN 217 --Norway > Norway
				WHEN 'ZZ' THEN 218 --Not known > Not Known
				WHEN 'PS' THEN 219 --Occupied Palestinian Territories [Palestinian Territory, Occupied] {formerly West Bank (including East Jerusalem) and Gaza Strip} > Occupied Palestinian Territories
				WHEN 'OM' THEN 220 --Oman > Oman
				WHEN 'PK' THEN 221 --Pakistan > Pakistan
				WHEN 'PW' THEN 222 --Palau > Palau
				WHEN 'PA' THEN 223 --Panama > Panama
				WHEN 'PG' THEN 224 --Papua New Guinea > Papua New Guinea
				WHEN 'PY' THEN 225 --Paraguay > Paraguay
				WHEN 'PE' THEN 226 --Peru > Peru
				WHEN 'PH' THEN 227 --Philippines > Philippines
				WHEN 'PN' THEN 228 --Pitcairn, Henderson, Ducie and Oeno Islands [Pitcairn] > Pitcairn, Henderson, Ducie And Oeno Islands
				WHEN 'PL' THEN 229 --Poland > Poland
				WHEN 'PT' THEN 230 --Portugal {includes Madeira, Azores} > Portugal
				WHEN 'PR' THEN 231 --Puerto Rico > Puerto Rico
				WHEN 'QA' THEN 232 --Qatar > Qatar
				WHEN 'RE' THEN 233 --Reunion > Reunion
				WHEN 'RO' THEN 234 --Romania > Romania
				WHEN 'RU' THEN 235 --Russia [Russian Federation] > Russia
				WHEN 'RW' THEN 236 --Rwanda > Rwanda
				WHEN 'WS' THEN 237 --Samoa > Samoa
				WHEN 'SM' THEN 238 --San Marino > San Marino
				WHEN 'ST' THEN 239 --Sao Tome and Principe > Sao Tome And Principe
				WHEN 'SA' THEN 240 --Saudi Arabia > Saudi Arabia
				WHEN 'XH' THEN 241 --Scotland > Scotland
				WHEN 'SN' THEN 242 --Senegal > Senegal
				WHEN 'RS' THEN 243 --Serbia > Serbia
				WHEN 'SC' THEN 245 --Seychelles > Seychelles
				WHEN 'SL' THEN 246 --Sierra Leone > Sierra Leone
				WHEN 'SG' THEN 247 --Singapore > Singapore
				WHEN 'SX' THEN 248 --Sint Maarten (Dutch part) > Sint Maarten (Dutch part)
				WHEN 'SK' THEN 249 --Slovakia > Slovakia
				WHEN 'SI' THEN 250 --Slovenia > Slovenia
				WHEN 'SB' THEN 251 --Solomon Islands > Solomon Islands
				WHEN 'SO' THEN 252 --Somalia > Somalia
				WHEN 'ZA' THEN 253 --South Africa > South Africa
				WHEN 'XV' THEN 254 --South America not otherwise specified > South America Not Otherwise Specified
				WHEN 'GS' THEN 255 --South Georgia and The South Sandwich Islands > South Georgia And The South Sandwich Islands
				WHEN 'SS' THEN 256 --South Sudan > South Sudan
				WHEN 'ES' THEN 257 --Spain {includes Ceuta, Melilla} > Spain
				WHEN 'LK' THEN 260 --Sri Lanka > Sri Lanka
				WHEN 'BL' THEN 261 --St Barthelemy > St Barthelemy
				WHEN 'SH' THEN 262 --St Helena, Ascension and Tristan da Cunha > St Helena, Ascension and Tristan da Cunha
				WHEN 'KN' THEN 263 --St Kitts and Nevis > St Kitts And Nevis
				WHEN 'LC' THEN 264 --St Lucia > St Lucia
				WHEN 'MF' THEN 265 --St Martin (French Part) [St Martin] > St Martin (French Part)
				WHEN 'PM' THEN 266 --St Pierre and Miquelon > St Pierre And Miquelon
				WHEN 'VC' THEN 267 --St Vincent and The Grenadines > St Vincent And The Grenadines
				WHEN 'SD' THEN 268 --Sudan > Sudan
				WHEN 'SR' THEN 269 --Surinam [Suriname] > Surinam
				WHEN 'SJ' THEN 270 --Svalbard and Jan Mayen > Svalbard And Jan Mayen
				WHEN 'SZ' THEN 271 --Swaziland > Swaziland
				WHEN 'SE' THEN 272 --Sweden > Sweden
				WHEN 'CH' THEN 273 --Switzerland > Switzerland
				WHEN 'SY' THEN 274 --Syria [Syrian Arab Republic] > Syria
				WHEN 'TW' THEN 86 --Taiwan [Taiwan, Province of China] > China (Taiwan)
				WHEN 'TJ' THEN 275 --Tajikistan > Tajikistan
				WHEN 'TZ' THEN 276 --Tanzania [Tanzania, United Republic of] > Tanzania
				WHEN 'TH' THEN 277 --Thailand > Thailand
				WHEN 'TG' THEN 278 --Togo > Togo
				WHEN 'TK' THEN 279 --Tokelau > Tokelau
				WHEN 'TO' THEN 280 --Tonga > Tonga
				WHEN 'TT' THEN 281 --Trinidad and Tobago > Trinidad And Tobago
				WHEN 'TN' THEN 282 --Tunisia > Tunisia
				WHEN 'TR' THEN 283 --Turkey > Turkey
				WHEN 'TM' THEN 284 --Turkmenistan > Turkmenistan
				WHEN 'TC' THEN 285 --Turks and Caicos Islands > Turks And Caicos Islands
				WHEN 'TV' THEN 286 --Tuvalu > Tuvalu
				WHEN 'UG' THEN 287 --Uganda > Uganda
				WHEN 'UA' THEN 288 --Ukraine > Ukraine
				WHEN 'AE' THEN 290 --United Arab Emirates > United Arab Emirates
				WHEN 'XK' THEN 292 --United Kingdom, not otherwise specified > United Kingdom Not Otherwise Specified
				WHEN 'US' THEN 293 --United States > United States
				WHEN 'VI' THEN 295 --United States Virgin Islands [Virgin Islands, U. S.] > United States Virgin Islands
				WHEN 'UY' THEN 296 --Uruguay > Uruguay
				WHEN 'UZ' THEN 297 --Uzbekistan > Uzbekistan
				WHEN 'VU' THEN 298 --Vanuatu > Vanuatu
				WHEN 'VA' THEN 299 --Vatican City [Holy See (Vatican City State)] > Vatican City
				WHEN 'VE' THEN 300 --Venezuela > Venezuela
				WHEN 'VN' THEN 301 --Vietnam [Viet Nam] > Vietnam
				WHEN 'XI' THEN 302 --Wales > Wales
				WHEN 'WF' THEN 303 --Wallis and Futuna > Wallis And Futuna
				WHEN 'EH' THEN 305 --Western Sahara > Western Sahara
				WHEN 'YE' THEN 306 --Yemen > Yemen
				WHEN 'ZM' THEN 308 --Zambia > Zambia
				WHEN 'ZW' THEN 309 --Zimbabwe > Zimbabwe
				ELSE NULL
			END,
		CountryOfNationalityName = 
			CASE
				NAT.CODE
				WHEN 'AF' THEN 'Afghanistan'
				WHEN 'XQ' THEN 'Africa Not Otherwise Specified'
				WHEN 'AX' THEN 'Aland Islands'
				WHEN 'AL' THEN 'Albania'
				WHEN 'DZ' THEN 'Algeria'
				WHEN 'AS' THEN 'American Samoa'
				WHEN 'AD' THEN 'Andorra'
				WHEN 'AO' THEN 'Angola'
				WHEN 'AI' THEN 'Anguilla'
				WHEN 'XX' THEN 'Antarctica And Oceania Not Otherwise Specified'
				WHEN 'AG' THEN 'Antigua And Barbuda'
				WHEN 'AR' THEN 'Argentina'
				WHEN 'AM' THEN 'Armenia'
				WHEN 'AW' THEN 'Aruba'
				WHEN 'XS' THEN 'Asia (Except Middle East) Not Otherwise Specified'
				WHEN 'AU' THEN 'Australia'
				WHEN 'AT' THEN 'Austria'
				WHEN 'AZ' THEN 'Azerbaijan'
				WHEN 'BS' THEN 'Bahamas, The'
				WHEN 'BH' THEN 'Bahrain'
				WHEN 'BD' THEN 'Bangladesh'
				WHEN 'BB' THEN 'Barbados'
				WHEN 'BY' THEN 'Belarus'
				WHEN 'BE' THEN 'Belgium'
				WHEN 'BZ' THEN 'Belize'
				WHEN 'BJ' THEN 'Benin'
				WHEN 'BM' THEN 'Bermuda'
				WHEN 'BT' THEN 'Bhutan'
				WHEN 'BO' THEN 'Bolivia'
				WHEN 'BQ' THEN 'Bonaire, Sint Eustatius and Saba'
				WHEN 'BA' THEN 'Bosnia And Herzegovina'
				WHEN 'BW' THEN 'Botswana'
				WHEN 'BR' THEN 'Brazil'
				WHEN 'VG' THEN 'British Virgin Islands'
				WHEN 'BN' THEN 'Brunei'
				WHEN 'BG' THEN 'Bulgaria'
				WHEN 'BF' THEN 'Burkina'
				WHEN 'MM' THEN 'Burma'
				WHEN 'BI' THEN 'Burundi'
				WHEN 'KH' THEN 'Cambodia'
				WHEN 'CM' THEN 'Cameroon'
				WHEN 'CA' THEN 'Canada'
				WHEN 'IC' THEN 'Canary Islands'
				WHEN 'CV' THEN 'Cape Verde'
				WHEN 'XW' THEN 'Caribbean Not Otherwise Specified'
				WHEN 'KY' THEN 'Cayman Islands'
				WHEN 'CF' THEN 'Central African Republic'
				WHEN 'XU' THEN 'Central America Not Otherwise Specified'
				WHEN 'TD' THEN 'Chad'
				WHEN 'XL' THEN 'Channel Islands Not Otherwise Specified'
				WHEN 'CL' THEN 'Chile'
				WHEN 'CN' THEN 'China'
				WHEN 'CX' THEN 'Christmas Island'
				WHEN 'CC' THEN 'Cocos (Keeling) Islands'
				WHEN 'CO' THEN 'Colombia'
				WHEN 'KM' THEN 'Comoros'
				WHEN 'CG' THEN 'Congo'
				WHEN 'CD' THEN 'Congo (Democratic Republic)'
				WHEN 'CK' THEN 'Cook Islands'
				WHEN 'CR' THEN 'Costa Rica'
				WHEN 'HR' THEN 'Croatia'
				WHEN 'CU' THEN 'Cuba'
				WHEN 'CW' THEN 'Curacao'
				WHEN 'XA' THEN 'Cyprus (European Union)'
				WHEN 'XB' THEN 'Cyprus (Non-European Union)'
				WHEN 'XC' THEN 'Cyprus Not Otherwise Specified'
				WHEN 'CZ' THEN 'Czech Republic'
				WHEN 'DK' THEN 'Denmark'
				WHEN 'DJ' THEN 'Djibouti'
				WHEN 'DM' THEN 'Dominica'
				WHEN 'DO' THEN 'Dominican Republic'
				WHEN 'TL' THEN 'East Timor'
				WHEN 'EC' THEN 'Ecuador'
				WHEN 'EG' THEN 'Egypt'
				WHEN 'SV' THEN 'El Salvador'
				WHEN 'XF' THEN 'England'
				WHEN 'GQ' THEN 'Equatorial Guinea'
				WHEN 'ER' THEN 'Eritrea'
				WHEN 'EE' THEN 'Estonia'
				WHEN 'ET' THEN 'Ethiopia'
				WHEN 'XP' THEN 'Europe Not Otherwise Specified'
				WHEN 'EU' THEN 'European Union not otherwise specified'
				WHEN 'FK' THEN 'Falkland Islands'
				WHEN 'FO' THEN 'Faroe Islands'
				WHEN 'FJ' THEN 'Fiji'
				WHEN 'FI' THEN 'Finland'
				WHEN 'FR' THEN 'France'
				WHEN 'GF' THEN 'French Guiana'
				WHEN 'PF' THEN 'French Polynesia'
				WHEN 'GA' THEN 'Gabon'
				WHEN 'GM' THEN 'Gambia, The'
				WHEN 'GE' THEN 'Georgia'
				WHEN 'DE' THEN 'Germany'
				WHEN 'GH' THEN 'Ghana'
				WHEN 'GI' THEN 'Gibraltar'
				WHEN 'GR' THEN 'Greece'
				WHEN 'GL' THEN 'Greenland'
				WHEN 'GD' THEN 'Grenada'
				WHEN 'GP' THEN 'Guadeloupe'
				WHEN 'GU' THEN 'Guam'
				WHEN 'GT' THEN 'Guatemala'
				WHEN 'GG' THEN 'Guernsey'
				WHEN 'GN' THEN 'Guinea'
				WHEN 'GW' THEN 'Guinea-Bissau'
				WHEN 'GY' THEN 'Guyana'
				WHEN 'HT' THEN 'Haiti'
				WHEN 'HN' THEN 'Honduras'
				WHEN 'HK' THEN 'Hong Kong (Special Administrative Region Of China)'
				WHEN 'HU' THEN 'Hungary'
				WHEN 'IS' THEN 'Iceland'
				WHEN 'IN' THEN 'India'
				WHEN 'ID' THEN 'Indonesia'
				WHEN 'IR' THEN 'Iran'
				WHEN 'IQ' THEN 'Iraq'
				WHEN 'IE' THEN 'Ireland'
				WHEN 'IM' THEN 'Isle Of Man'
				WHEN 'IL' THEN 'Israel'
				WHEN 'IT' THEN 'Italy'
				WHEN 'CI' THEN 'Ivory Coast'
				WHEN 'JM' THEN 'Jamaica'
				WHEN 'JP' THEN 'Japan'
				WHEN 'JE' THEN 'Jersey'
				WHEN 'JO' THEN 'Jordan'
				WHEN 'KZ' THEN 'Kazakhstan'
				WHEN 'KE' THEN 'Kenya'
				WHEN 'KI' THEN 'Kiribati'
				WHEN 'KP' THEN 'Korea (North)'
				WHEN 'KR' THEN 'Korea (South)'
				WHEN 'QO' THEN 'Kosovo'
				WHEN 'KW' THEN 'Kuwait'
				WHEN 'KG' THEN 'Kyrgyzstan'
				WHEN 'LA' THEN 'Laos'
				WHEN 'LV' THEN 'Latvia'
				WHEN 'LB' THEN 'Lebanon'
				WHEN 'LS' THEN 'Lesotho'
				WHEN 'LR' THEN 'Liberia'
				WHEN 'LY' THEN 'Libya'
				WHEN 'LI' THEN 'Liechtenstein'
				WHEN 'LT' THEN 'Lithuania'
				WHEN 'LU' THEN 'Luxembourg'
				WHEN 'MO' THEN 'Macao (special Administrative Region Of China)'
				WHEN 'MK' THEN 'Macedonia'
				WHEN 'MG' THEN 'Madagascar'
				WHEN 'MW' THEN 'Malawi'
				WHEN 'MY' THEN 'Malaysia'
				WHEN 'MV' THEN 'Maldives'
				WHEN 'ML' THEN 'Mali'
				WHEN 'MT' THEN 'Malta'
				WHEN 'MH' THEN 'Marshall Islands'
				WHEN 'MQ' THEN 'Martinique'
				WHEN 'MR' THEN 'Mauritania'
				WHEN 'MU' THEN 'Mauritius'
				WHEN 'YT' THEN 'Mayotte'
				WHEN 'MX' THEN 'Mexico'
				WHEN 'FM' THEN 'Micronesia'
				WHEN 'XR' THEN 'Middle East Not Otherwise Specified'
				WHEN 'MD' THEN 'Moldova'
				WHEN 'MC' THEN 'Monaco'
				WHEN 'MN' THEN 'Mongolia'
				WHEN 'ME' THEN 'Montenegro'
				WHEN 'MS' THEN 'Montserrat'
				WHEN 'MA' THEN 'Morocco'
				WHEN 'MZ' THEN 'Mozambique'
				WHEN 'NA' THEN 'Namibia'
				WHEN 'NR' THEN 'Nauru'
				WHEN 'NP' THEN 'Nepal'
				WHEN 'NL' THEN 'Netherlands'
				WHEN 'AN' THEN 'Netherlands Antilles'
				WHEN 'NC' THEN 'New Caledonia'
				WHEN 'NZ' THEN 'New Zealand'
				WHEN 'NI' THEN 'Nicaragua'
				WHEN 'NE' THEN 'Niger'
				WHEN 'NG' THEN 'Nigeria'
				WHEN 'NU' THEN 'Niue'
				WHEN 'NF' THEN 'Norfolk Island'
				WHEN 'XT' THEN 'North America Not Otherwise Specified'
				WHEN 'XG' THEN 'Northern Ireland'
				WHEN 'MP' THEN 'Northern Mariana Islands'
				WHEN 'NO' THEN 'Norway'
				WHEN 'ZZ' THEN 'Not Known'
				WHEN 'PS' THEN 'Occupied Palestinian Territories'
				WHEN 'OM' THEN 'Oman'
				WHEN 'PK' THEN 'Pakistan'
				WHEN 'PW' THEN 'Palau'
				WHEN 'PA' THEN 'Panama'
				WHEN 'PG' THEN 'Papua New Guinea'
				WHEN 'PY' THEN 'Paraguay'
				WHEN 'PE' THEN 'Peru'
				WHEN 'PH' THEN 'Philippines'
				WHEN 'PN' THEN 'Pitcairn, Henderson, Ducie And Oeno Islands'
				WHEN 'PL' THEN 'Poland'
				WHEN 'PT' THEN 'Portugal'
				WHEN 'PR' THEN 'Puerto Rico'
				WHEN 'QA' THEN 'Qatar'
				WHEN 'RE' THEN 'Reunion'
				WHEN 'RO' THEN 'Romania'
				WHEN 'RU' THEN 'Russia'
				WHEN 'RW' THEN 'Rwanda'
				WHEN 'WS' THEN 'Samoa'
				WHEN 'SM' THEN 'San Marino'
				WHEN 'ST' THEN 'Sao Tome And Principe'
				WHEN 'SA' THEN 'Saudi Arabia'
				WHEN 'XH' THEN 'Scotland'
				WHEN 'SN' THEN 'Senegal'
				WHEN 'RS' THEN 'Serbia'
				WHEN 'SC' THEN 'Seychelles'
				WHEN 'SL' THEN 'Sierra Leone'
				WHEN 'SG' THEN 'Singapore'
				WHEN 'SX' THEN 'Sint Maarten (Dutch part)'
				WHEN 'SK' THEN 'Slovakia'
				WHEN 'SI' THEN 'Slovenia'
				WHEN 'SB' THEN 'Solomon Islands'
				WHEN 'SO' THEN 'Somalia'
				WHEN 'ZA' THEN 'South Africa'
				WHEN 'XV' THEN 'South America Not Otherwise Specified'
				WHEN 'GS' THEN 'South Georgia And The South Sandwich Islands'
				WHEN 'SS' THEN 'South Sudan'
				WHEN 'ES' THEN 'Spain'
				WHEN 'LK' THEN 'Sri Lanka'
				WHEN 'BL' THEN 'St Barthelemy'
				WHEN 'SH' THEN 'St Helena, Ascension and Tristan da Cunha'
				WHEN 'KN' THEN 'St Kitts And Nevis'
				WHEN 'LC' THEN 'St Lucia'
				WHEN 'MF' THEN 'St Martin (French Part)'
				WHEN 'PM' THEN 'St Pierre And Miquelon'
				WHEN 'VC' THEN 'St Vincent And The Grenadines'
				WHEN 'SD' THEN 'Sudan'
				WHEN 'SR' THEN 'Surinam'
				WHEN 'SJ' THEN 'Svalbard And Jan Mayen'
				WHEN 'SZ' THEN 'Swaziland'
				WHEN 'SE' THEN 'Sweden'
				WHEN 'CH' THEN 'Switzerland'
				WHEN 'SY' THEN 'Syria'
				WHEN 'TW' THEN 'China (Taiwan)'
				WHEN 'TJ' THEN 'Tajikistan'
				WHEN 'TZ' THEN'Tanzania'
				WHEN 'TH' THEN 'Thailand'
				WHEN 'TG' THEN 'Togo'
				WHEN 'TK' THEN 'Tokelau'
				WHEN 'TO' THEN 'Tonga'
				WHEN 'TT' THEN 'Trinidad And Tobago'
				WHEN 'TN' THEN 'Tunisia'
				WHEN 'TR' THEN 'Turkey'
				WHEN 'TM' THEN 'Turkmenistan'
				WHEN 'TC' THEN 'Turks And Caicos Islands'
				WHEN 'TV' THEN 'Tuvalu'
				WHEN 'UG' THEN 'Uganda'
				WHEN 'UA' THEN 'Ukraine'
				WHEN 'AE' THEN 'United Arab Emirates'
				WHEN 'XK' THEN 'United Kingdom Not Otherwise Specified'
				WHEN 'US' THEN 'United States'
				WHEN 'VI' THEN 'United States Virgin Islands'
				WHEN 'UY' THEN 'Uruguay'
				WHEN 'UZ' THEN 'Uzbekistan'
				WHEN 'VU' THEN 'Vanuatu'
				WHEN 'VA' THEN 'Vatican City'
				WHEN 'VE' THEN'Venezuela'
				WHEN 'VN' THEN 'Vietnam'
				WHEN 'XI' THEN 'Wales'
				WHEN 'WF' THEN 'Wallis And Futuna'
				WHEN 'EH' THEN 'Western Sahara'
				WHEN 'YE' THEN 'Yemen'
				WHEN 'ZM' THEN 'Zambia'
				WHEN 'ZW' THEN 'Zimbabwe'
				ELSE NULL
			END,
		CountryOfBirthID = CAST ( NULL AS INT ),
		CountryOfBirthName = P.PLACE_OF_BIRTH,
		CountryLivingPast3Years = NULL,
		CandidateReligiousIdentityID = 
			CASE
				RELI.LOW_VALUE
				WHEN '01' THEN 11 --None > No religion
				WHEN '02' THEN 3 --Buddhist > Buddhist
				WHEN '05' THEN 10 --Roman Catholic > Other
				WHEN '06' THEN 10 --Presbyterian Church in Ireland > Other
				WHEN '07' THEN 10 --Church of Ireland > Other
				WHEN '08' THEN 10 --Methodist > Other
				WHEN '09' THEN 1 --Other Christian > Christian
				WHEN '10' THEN 5 --Hindu > Hindu
				WHEN '11' THEN 2 --Jewish > Jewish
				WHEN '12' THEN 4 --Muslim > Muslim
				WHEN '13' THEN 6 --Sikh > Sikh
				WHEN '80' THEN 10 --Other Religion > Other
				WHEN '98' THEN 7 --Prefer not to say > Prefer not to say
				WHEN '99' THEN NULL --Not Stated - MIS use Only
				ELSE NULL
			END,
		CandidateReligiousIdentityName = 
			CASE
				RELI.LOW_VALUE
				WHEN '01' THEN 'No religion'
				WHEN '02' THEN 'Buddhist'
				WHEN '05' THEN 'Other'
				WHEN '06' THEN 'Other'
				WHEN '07' THEN 'Other'
				WHEN '08' THEN 'Other'
				WHEN '09' THEN 'Christian'
				WHEN '10' THEN 'Hindu'
				WHEN '11' THEN 'Jewish'
				WHEN '12' THEN 'Muslim'
				WHEN '13' THEN 'Sikh'
				WHEN '80' THEN 'Other'
				WHEN '98' THEN 'Prefer not to say'
				WHEN '99' THEN NULL
				ELSE NULL
			END,
		ReligiousIdentityOther = NULL,
		CandidateSexualOrientationID = CAST ( NULL AS INT ),
		LSNeedsSupport = CAST ( CASE WHEN COALESCE ( LI.HAS_HEALTHCARE_PLAN, PI.HAS_HEALTHCARE_PLAN ) = 'Y' THEN 1 ELSE 0 END AS BIT ),
		LSNeedsExtraHelp = CAST ( CASE WHEN COALESCE ( LI.LEARN_DIFF, P.LEARN_DIFF, 9 ) = '1' THEN 1 ELSE 0 END AS BIT ),
		LSNeedsExtraHelpWith = NULL,
		LSNeedsMedicine = CAST ( NULL AS BIT ),
		LSNeedMedicineHelp = CAST ( NULL AS BIT ),
		LSNeedsPersonalCareAssistant = CAST ( NULL AS BIT ),
		DisabilityLearningDifficultiesPrimaryID =
			CASE
				DIS.LOW_VALUE
				WHEN '15' THEN 12 --Asperger's syndrome > Asperger's syndrome
				WHEN '14' THEN 11 --Autism spectrum disorder > Autism spectrum disorder
				WHEN '6' THEN 3 --Disability affecting mobility > Disability affecting mobility
				WHEN '18' THEN 22 --Down Syndrome > Down Syndrome
				WHEN '13' THEN 10 --Dyscalculia > Dyscalculia
				WHEN '12' THEN 9 --Dyslexia > Dyslexia
				WHEN '5' THEN 2 --Hearing impairment > Hearing impairment
				WHEN '9' THEN 6 --Mental health difficulty > Mental health difficulty
				WHEN '10' THEN 7 --Moderate learning difficulty > Moderate learning difficulty
				WHEN '99' THEN 21 --Not provided > Not provided
				WHEN '97' THEN 19 --Other disability > Other disability
				WHEN '96' THEN 18 --Other learning difficulty / HE - A disability, impairment or medical condition that is not listed above > Other learning difficulty
				WHEN '95' THEN 17 --Other medical condition (for example epilepsy, asthma, diabetes) > Other medical condition (for example epilepsy, asthma, diabetes)
				WHEN '93' THEN 15 --Other physical disability > Other physical disability
				WHEN '94' THEN 16 --Other specific learning difficulty (e.g. Dyspraxia) > Other specific learning difficulty (e.g. Dyspraxia)
				WHEN '98' THEN 20 --Prefer not to say > Prefer not to say
				WHEN '7' THEN 4 --Profound complex disabilities > Profound complex disabilities
				WHEN '11' THEN 8 --Severe learning difficulty > Severe learning difficulty
				WHEN '8' THEN 5 --Social and emotional difficulties > Social and emotional difficulties
				WHEN '17' THEN 14 --Speech, Language and Communication Needs > Speech, Language and Communication Needs
				WHEN '16' THEN 13 --Temporary disability after illness (for example post-viral) or accident > Temporary disability after illness (for example post-viral) or accident
				WHEN '4' THEN 1 --Visual impairment > Vision impairment
				ELSE NULL
			END,
		DisabilityLearningDifficultiesPrimaryName = 
			CASE
				DIS.LOW_VALUE
				WHEN '15' THEN 'Asperger''s syndrome'
				WHEN '14' THEN 'Autism spectrum disorder'
				WHEN '6' THEN 'Disability affecting mobility'
				WHEN '18' THEN 'Down Syndrome'
				WHEN '13' THEN 'Dyscalculia'
				WHEN '12' THEN 'Dyslexia'
				WHEN '5' THEN 'Hearing impairment'
				WHEN '9' THEN 'Mental health difficulty'
				WHEN '10' THEN 'Moderate learning difficulty'
				WHEN '99' THEN 'Not provided'
				WHEN '97' THEN 'Other disability'
				WHEN '96' THEN 'Other learning difficulty'
				WHEN '95' THEN 'Other medical condition (for example epilepsy, asthma, diabetes)'
				WHEN '93' THEN 'Other physical disability'
				WHEN '94' THEN 'Other specific learning difficulty (e.g. Dyspraxia)'
				WHEN '98' THEN 'Prefer not to say'
				WHEN '7' THEN 'Profound complex disabilities'
				WHEN '11' THEN 'Severe learning difficulty'
				WHEN '8' THEN 'Social and emotional difficulties'
				WHEN '17' THEN 'Speech, Language and Communication Needs'
				WHEN '16' THEN 'Temporary disability after illness (for example post-viral) or accident'
				WHEN '4' THEN 'Vision impairment'
				ELSE NULL
			END,
		SchoolingInterupted = CAST ( NULL AS BIT ),
		LivingInHostelOrResidentail = CAST ( NULL AS BIT ),
		OffenderInCommunity = CAST ( NULL AS BIT ),
		InCareEmployerPermission = CAST ( NULL AS BIT ),
		UnSpentConvictions = CAST ( NULL AS BIT ),
		SchoolAt16 = SCH.FULL_NAME,
		StudentSignatureObtained = CAST ( 1 AS BIT ),
		QuestionSetID = NULL,
		StudentSignatureObtainedDate = NULL,
		TitleOther = NULL,
		CandidateHighestLevelID = 
			CASE
				ATN.CODE
				WHEN '1' THEN 1 --Entry level > Entry Level (Entry level award / essential skills)
				WHEN '4' THEN 4 --Full level 2 > Full level 2 (5 GCSEs 9-4; A*-C; Level 2 diploma; Int. app)
				WHEN '6' THEN 5 --Full level 3 > Full level 3 (2 A-Levels; Level 3 diploma; Adv app.)
				WHEN '2' THEN 3 --level 1 > Level 1 (GCSE grades 3-1; D-G; or fewer than 5 grades 9-4; A*-C; Level 1 award)
				WHEN '3' THEN 13 --level 2 > Level 2 (At least 5 GCSE grades 9-4; A*-C; Level 2 award; Int app)
				WHEN '5' THEN 14 --Level 3 > Level 3 (A/AS-Level; Level 3 award; Adv App; T-Level)
				WHEN '7' THEN 6 --Level 4 > Level 4 (HNC; Level 4 award; Higher app)
				WHEN '8' THEN 7 --Level 5 > Level 5 (HND; Foundation Deg; Level 5 award)
				WHEN '9' THEN 8 --Level 6 > Level 6 (Degree; Level 6 award; Graduate cert; Deg app)
				WHEN '10' THEN 9 --Level 7 and above > Level 7 and above (Masters degree; Post grad cert; Level 7 award)
				WHEN '99' THEN 12 --No qualifications > No qualifications
				WHEN '98' THEN 11 --Not known > Not known
				WHEN '97' THEN 10 --Other qualification, level not known > Other qualification, level not known
				ELSE NULL
			END,
		Nationality = 
			CASE
				NAT.CODE
				WHEN 'AF' THEN 'Afghanistan'
				WHEN 'XQ' THEN 'Africa Not Otherwise Specified'
				WHEN 'AX' THEN 'Aland Islands'
				WHEN 'AL' THEN 'Albania'
				WHEN 'DZ' THEN 'Algeria'
				WHEN 'AS' THEN 'American Samoa'
				WHEN 'AD' THEN 'Andorra'
				WHEN 'AO' THEN 'Angola'
				WHEN 'AI' THEN 'Anguilla'
				WHEN 'XX' THEN 'Antarctica And Oceania Not Otherwise Specified'
				WHEN 'AG' THEN 'Antigua And Barbuda'
				WHEN 'AR' THEN 'Argentina'
				WHEN 'AM' THEN 'Armenia'
				WHEN 'AW' THEN 'Aruba'
				WHEN 'XS' THEN 'Asia (Except Middle East) Not Otherwise Specified'
				WHEN 'AU' THEN 'Australia'
				WHEN 'AT' THEN 'Austria'
				WHEN 'AZ' THEN 'Azerbaijan'
				WHEN 'BS' THEN 'Bahamas, The'
				WHEN 'BH' THEN 'Bahrain'
				WHEN 'BD' THEN 'Bangladesh'
				WHEN 'BB' THEN 'Barbados'
				WHEN 'BY' THEN 'Belarus'
				WHEN 'BE' THEN 'Belgium'
				WHEN 'BZ' THEN 'Belize'
				WHEN 'BJ' THEN 'Benin'
				WHEN 'BM' THEN 'Bermuda'
				WHEN 'BT' THEN 'Bhutan'
				WHEN 'BO' THEN 'Bolivia'
				WHEN 'BQ' THEN 'Bonaire, Sint Eustatius and Saba'
				WHEN 'BA' THEN 'Bosnia And Herzegovina'
				WHEN 'BW' THEN 'Botswana'
				WHEN 'BR' THEN 'Brazil'
				WHEN 'VG' THEN 'British Virgin Islands'
				WHEN 'BN' THEN 'Brunei'
				WHEN 'BG' THEN 'Bulgaria'
				WHEN 'BF' THEN 'Burkina'
				WHEN 'MM' THEN 'Burma'
				WHEN 'BI' THEN 'Burundi'
				WHEN 'KH' THEN 'Cambodia'
				WHEN 'CM' THEN 'Cameroon'
				WHEN 'CA' THEN 'Canada'
				WHEN 'IC' THEN 'Canary Islands'
				WHEN 'CV' THEN 'Cape Verde'
				WHEN 'XW' THEN 'Caribbean Not Otherwise Specified'
				WHEN 'KY' THEN 'Cayman Islands'
				WHEN 'CF' THEN 'Central African Republic'
				WHEN 'XU' THEN 'Central America Not Otherwise Specified'
				WHEN 'TD' THEN 'Chad'
				WHEN 'XL' THEN 'Channel Islands Not Otherwise Specified'
				WHEN 'CL' THEN 'Chile'
				WHEN 'CN' THEN 'China'
				WHEN 'CX' THEN 'Christmas Island'
				WHEN 'CC' THEN 'Cocos (Keeling) Islands'
				WHEN 'CO' THEN 'Colombia'
				WHEN 'KM' THEN 'Comoros'
				WHEN 'CG' THEN 'Congo'
				WHEN 'CD' THEN 'Congo (Democratic Republic)'
				WHEN 'CK' THEN 'Cook Islands'
				WHEN 'CR' THEN 'Costa Rica'
				WHEN 'HR' THEN 'Croatia'
				WHEN 'CU' THEN 'Cuba'
				WHEN 'CW' THEN 'Curacao'
				WHEN 'XA' THEN 'Cyprus (European Union)'
				WHEN 'XB' THEN 'Cyprus (Non-European Union)'
				WHEN 'XC' THEN 'Cyprus Not Otherwise Specified'
				WHEN 'CZ' THEN 'Czech Republic'
				WHEN 'DK' THEN 'Denmark'
				WHEN 'DJ' THEN 'Djibouti'
				WHEN 'DM' THEN 'Dominica'
				WHEN 'DO' THEN 'Dominican Republic'
				WHEN 'TL' THEN 'East Timor'
				WHEN 'EC' THEN 'Ecuador'
				WHEN 'EG' THEN 'Egypt'
				WHEN 'SV' THEN 'El Salvador'
				WHEN 'XF' THEN 'England'
				WHEN 'GQ' THEN 'Equatorial Guinea'
				WHEN 'ER' THEN 'Eritrea'
				WHEN 'EE' THEN 'Estonia'
				WHEN 'ET' THEN 'Ethiopia'
				WHEN 'XP' THEN 'Europe Not Otherwise Specified'
				WHEN 'EU' THEN 'European Union not otherwise specified'
				WHEN 'FK' THEN 'Falkland Islands'
				WHEN 'FO' THEN 'Faroe Islands'
				WHEN 'FJ' THEN 'Fiji'
				WHEN 'FI' THEN 'Finland'
				WHEN 'FR' THEN 'France'
				WHEN 'GF' THEN 'French Guiana'
				WHEN 'PF' THEN 'French Polynesia'
				WHEN 'GA' THEN 'Gabon'
				WHEN 'GM' THEN 'Gambia, The'
				WHEN 'GE' THEN 'Georgia'
				WHEN 'DE' THEN 'Germany'
				WHEN 'GH' THEN 'Ghana'
				WHEN 'GI' THEN 'Gibraltar'
				WHEN 'GR' THEN 'Greece'
				WHEN 'GL' THEN 'Greenland'
				WHEN 'GD' THEN 'Grenada'
				WHEN 'GP' THEN 'Guadeloupe'
				WHEN 'GU' THEN 'Guam'
				WHEN 'GT' THEN 'Guatemala'
				WHEN 'GG' THEN 'Guernsey'
				WHEN 'GN' THEN 'Guinea'
				WHEN 'GW' THEN 'Guinea-Bissau'
				WHEN 'GY' THEN 'Guyana'
				WHEN 'HT' THEN 'Haiti'
				WHEN 'HN' THEN 'Honduras'
				WHEN 'HK' THEN 'Hong Kong (Special Administrative Region Of China)'
				WHEN 'HU' THEN 'Hungary'
				WHEN 'IS' THEN 'Iceland'
				WHEN 'IN' THEN 'India'
				WHEN 'ID' THEN 'Indonesia'
				WHEN 'IR' THEN 'Iran'
				WHEN 'IQ' THEN 'Iraq'
				WHEN 'IE' THEN 'Ireland'
				WHEN 'IM' THEN 'Isle Of Man'
				WHEN 'IL' THEN 'Israel'
				WHEN 'IT' THEN 'Italy'
				WHEN 'CI' THEN 'Ivory Coast'
				WHEN 'JM' THEN 'Jamaica'
				WHEN 'JP' THEN 'Japan'
				WHEN 'JE' THEN 'Jersey'
				WHEN 'JO' THEN 'Jordan'
				WHEN 'KZ' THEN 'Kazakhstan'
				WHEN 'KE' THEN 'Kenya'
				WHEN 'KI' THEN 'Kiribati'
				WHEN 'KP' THEN 'Korea (North)'
				WHEN 'KR' THEN 'Korea (South)'
				WHEN 'QO' THEN 'Kosovo'
				WHEN 'KW' THEN 'Kuwait'
				WHEN 'KG' THEN 'Kyrgyzstan'
				WHEN 'LA' THEN 'Laos'
				WHEN 'LV' THEN 'Latvia'
				WHEN 'LB' THEN 'Lebanon'
				WHEN 'LS' THEN 'Lesotho'
				WHEN 'LR' THEN 'Liberia'
				WHEN 'LY' THEN 'Libya'
				WHEN 'LI' THEN 'Liechtenstein'
				WHEN 'LT' THEN 'Lithuania'
				WHEN 'LU' THEN 'Luxembourg'
				WHEN 'MO' THEN 'Macao (special Administrative Region Of China)'
				WHEN 'MK' THEN 'Macedonia'
				WHEN 'MG' THEN 'Madagascar'
				WHEN 'MW' THEN 'Malawi'
				WHEN 'MY' THEN 'Malaysia'
				WHEN 'MV' THEN 'Maldives'
				WHEN 'ML' THEN 'Mali'
				WHEN 'MT' THEN 'Malta'
				WHEN 'MH' THEN 'Marshall Islands'
				WHEN 'MQ' THEN 'Martinique'
				WHEN 'MR' THEN 'Mauritania'
				WHEN 'MU' THEN 'Mauritius'
				WHEN 'YT' THEN 'Mayotte'
				WHEN 'MX' THEN 'Mexico'
				WHEN 'FM' THEN 'Micronesia'
				WHEN 'XR' THEN 'Middle East Not Otherwise Specified'
				WHEN 'MD' THEN 'Moldova'
				WHEN 'MC' THEN 'Monaco'
				WHEN 'MN' THEN 'Mongolia'
				WHEN 'ME' THEN 'Montenegro'
				WHEN 'MS' THEN 'Montserrat'
				WHEN 'MA' THEN 'Morocco'
				WHEN 'MZ' THEN 'Mozambique'
				WHEN 'NA' THEN 'Namibia'
				WHEN 'NR' THEN 'Nauru'
				WHEN 'NP' THEN 'Nepal'
				WHEN 'NL' THEN 'Netherlands'
				WHEN 'AN' THEN 'Netherlands Antilles'
				WHEN 'NC' THEN 'New Caledonia'
				WHEN 'NZ' THEN 'New Zealand'
				WHEN 'NI' THEN 'Nicaragua'
				WHEN 'NE' THEN 'Niger'
				WHEN 'NG' THEN 'Nigeria'
				WHEN 'NU' THEN 'Niue'
				WHEN 'NF' THEN 'Norfolk Island'
				WHEN 'XT' THEN 'North America Not Otherwise Specified'
				WHEN 'XG' THEN 'Northern Ireland'
				WHEN 'MP' THEN 'Northern Mariana Islands'
				WHEN 'NO' THEN 'Norway'
				WHEN 'ZZ' THEN 'Not Known'
				WHEN 'PS' THEN 'Occupied Palestinian Territories'
				WHEN 'OM' THEN 'Oman'
				WHEN 'PK' THEN 'Pakistan'
				WHEN 'PW' THEN 'Palau'
				WHEN 'PA' THEN 'Panama'
				WHEN 'PG' THEN 'Papua New Guinea'
				WHEN 'PY' THEN 'Paraguay'
				WHEN 'PE' THEN 'Peru'
				WHEN 'PH' THEN 'Philippines'
				WHEN 'PN' THEN 'Pitcairn, Henderson, Ducie And Oeno Islands'
				WHEN 'PL' THEN 'Poland'
				WHEN 'PT' THEN 'Portugal'
				WHEN 'PR' THEN 'Puerto Rico'
				WHEN 'QA' THEN 'Qatar'
				WHEN 'RE' THEN 'Reunion'
				WHEN 'RO' THEN 'Romania'
				WHEN 'RU' THEN 'Russia'
				WHEN 'RW' THEN 'Rwanda'
				WHEN 'WS' THEN 'Samoa'
				WHEN 'SM' THEN 'San Marino'
				WHEN 'ST' THEN 'Sao Tome And Principe'
				WHEN 'SA' THEN 'Saudi Arabia'
				WHEN 'XH' THEN 'Scotland'
				WHEN 'SN' THEN 'Senegal'
				WHEN 'RS' THEN 'Serbia'
				WHEN 'SC' THEN 'Seychelles'
				WHEN 'SL' THEN 'Sierra Leone'
				WHEN 'SG' THEN 'Singapore'
				WHEN 'SX' THEN 'Sint Maarten (Dutch part)'
				WHEN 'SK' THEN 'Slovakia'
				WHEN 'SI' THEN 'Slovenia'
				WHEN 'SB' THEN 'Solomon Islands'
				WHEN 'SO' THEN 'Somalia'
				WHEN 'ZA' THEN 'South Africa'
				WHEN 'XV' THEN 'South America Not Otherwise Specified'
				WHEN 'GS' THEN 'South Georgia And The South Sandwich Islands'
				WHEN 'SS' THEN 'South Sudan'
				WHEN 'ES' THEN 'Spain'
				WHEN 'LK' THEN 'Sri Lanka'
				WHEN 'BL' THEN 'St Barthelemy'
				WHEN 'SH' THEN 'St Helena, Ascension and Tristan da Cunha'
				WHEN 'KN' THEN 'St Kitts And Nevis'
				WHEN 'LC' THEN 'St Lucia'
				WHEN 'MF' THEN 'St Martin (French Part)'
				WHEN 'PM' THEN 'St Pierre And Miquelon'
				WHEN 'VC' THEN 'St Vincent And The Grenadines'
				WHEN 'SD' THEN 'Sudan'
				WHEN 'SR' THEN 'Surinam'
				WHEN 'SJ' THEN 'Svalbard And Jan Mayen'
				WHEN 'SZ' THEN 'Swaziland'
				WHEN 'SE' THEN 'Sweden'
				WHEN 'CH' THEN 'Switzerland'
				WHEN 'SY' THEN 'Syria'
				WHEN 'TW' THEN 'China (Taiwan)'
				WHEN 'TJ' THEN 'Tajikistan'
				WHEN 'TZ' THEN'Tanzania'
				WHEN 'TH' THEN 'Thailand'
				WHEN 'TG' THEN 'Togo'
				WHEN 'TK' THEN 'Tokelau'
				WHEN 'TO' THEN 'Tonga'
				WHEN 'TT' THEN 'Trinidad And Tobago'
				WHEN 'TN' THEN 'Tunisia'
				WHEN 'TR' THEN 'Turkey'
				WHEN 'TM' THEN 'Turkmenistan'
				WHEN 'TC' THEN 'Turks And Caicos Islands'
				WHEN 'TV' THEN 'Tuvalu'
				WHEN 'UG' THEN 'Uganda'
				WHEN 'UA' THEN 'Ukraine'
				WHEN 'AE' THEN 'United Arab Emirates'
				WHEN 'XK' THEN 'United Kingdom Not Otherwise Specified'
				WHEN 'US' THEN 'United States'
				WHEN 'VI' THEN 'United States Virgin Islands'
				WHEN 'UY' THEN 'Uruguay'
				WHEN 'UZ' THEN 'Uzbekistan'
				WHEN 'VU' THEN 'Vanuatu'
				WHEN 'VA' THEN 'Vatican City'
				WHEN 'VE' THEN'Venezuela'
				WHEN 'VN' THEN 'Vietnam'
				WHEN 'XI' THEN 'Wales'
				WHEN 'WF' THEN 'Wallis And Futuna'
				WHEN 'EH' THEN 'Western Sahara'
				WHEN 'YE' THEN 'Yemen'
				WHEN 'ZM' THEN 'Zambia'
				WHEN 'ZW' THEN 'Zimbabwe'
				ELSE NULL
			END,
		PermanentUKResident = CAST ( CASE WHEN P.DATE_UK_ENTRY IS NULL THEN 1 ELSE 0 END AS BIT ),
		DateOfEntryUk = P.DATE_UK_ENTRY,
		LivedOutsideUk =
			CAST (
				CASE
					WHEN P.UK_RESIDENT = 'Y' THEN 0
					WHEN P.DATE_UK_ENTRY IS NULL THEN 0
					ELSE 1
				END
			AS BIT ),
		BornInUK = CAST ( NULL AS BIT ),
		CountriesLived = NULL,
		ArcCardNumberIssued = NULL,
		LALetterRef = NULL,
		LALetterRefIssued = NULL,
		PassportNumberIssued = NULL,
		EndrosementRef = NULL,
		VisaEndDate = COALESCE ( TRY_CAST ( P.FES_USER_43 AS DATE ), TRY_CONVERT ( DATE, P.FES_USER_43, 103 ) ),
		EUSettledStatusShareCode = CAST ( NULL AS VARCHAR(50) ),
		LSAdditionalComment = MDIS.Description,
		HasEHCP = CAST ( CASE WHEN COALESCE ( LI.HAS_HEALTHCARE_PLAN, PI.HAS_HEALTHCARE_PLAN ) = 'Y' THEN 1 ELSE 0 END AS BIT ),
		EHCPEmployerPermission = CAST ( NULL AS BIT ),
		ListGenderIdentityID =
			CASE
				GEN.FES_LONG_DESCRIPTION
				WHEN 'F' THEN 1 --Female > Female
				WHEN 'GNC' THEN 4 --GNC > GNC
				WHEN 'IS' THEN 3 --Intersex > Intersex
				WHEN 'M' THEN 2 --Male > Male
				WHEN 'NB' THEN 5 --Non-binary > Non-binary
				WHEN 'X' THEN NULL --Prefer not to say
				WHEN 'TFFB' THEN NULL --Trans Female (AFAB)
				WHEN 'TFMB' THEN 7 --Trans Female (AMAB) > Trans female (AMAB)
				WHEN 'TMFB' THEN 6 --Trans Male (AFAB) > Trans male (AFAB)
				WHEN 'TMMB' THEN NULL --Trans Male (AMAB)
				ELSE NULL
			END,
		MainCourseCode = ENR.CourseCode,
		MainCourseTitle = ENR.CourseTitle
	FROM ebslive.dbo.PEOPLE P
	INNER JOIN #CurrentYear CY
		ON 1 = 1
	INNER JOIN ebslive.dbo.FUNDING_YEARS FY
		ON FY.FUNDING_YEAR = CY.FundingYear
	INNER JOIN #EnrolsOrAppsWithMainAimFlagged ENR
		ON ENR.PersonCode = P.PERSON_CODE
	INNER JOIN (
		SELECT
			PersonCode = P.PERSON_CODE,
			AddressCode = AD.ADDRESS_CODE,
			RowNum = 
				ROW_NUMBER () OVER (
					PARTITION BY
						P.PERSON_CODE
					ORDER BY
						CASE
							WHEN AD.END_DATE IS NULL THEN 1
							ELSE 2
						END,
						CASE
							WHEN AD.ADDRESS_TYPE = 'H' THEN 1
							WHEN AD.ADDRESS_TYPE = 'T' THEN 2
							WHEN AD.ADDRESS_TYPE = 'A' THEN 3
							WHEN AD.ADDRESS_TYPE = 'P' THEN 4
							WHEN AD.ADDRESS_TYPE = 'N' THEN 5
							WHEN AD.ADDRESS_TYPE = 'O' THEN 6
							ELSE 9
						END
				)
		FROM ebslive.dbo.PEOPLE P
		INNER JOIN ebslive.dbo.ADDRESSES AD
			ON AD.PERSON_CODE = P.PERSON_CODE
			AND AD.OWNER_TYPE = 'P'
	) ADM
		ON ADM.PersonCode = P.PERSON_CODE
		AND ADM.RowNum = 1
	INNER JOIN ebslive.dbo.ADDRESSES AD
		 ON AD.ADDRESS_CODE = ADM.AddressCode
	LEFT JOIN (
		SELECT
			PersonCode = P.PERSON_CODE,
			AddressCode = AD.ADDRESS_CODE,
			RowNum = 
				ROW_NUMBER () OVER (
					PARTITION BY
						P.PERSON_CODE
					ORDER BY
						CASE
							WHEN AD.END_DATE IS NULL THEN 1
							ELSE 2
						END
				)
		FROM ebslive.dbo.PEOPLE P
		INNER JOIN ebslive.dbo.ADDRESSES AD
			ON AD.PERSON_CODE = P.PERSON_CODE
			AND AD.OWNER_TYPE = 'P'
		WHERE
			AD.ADDRESS_TYPE = 'N' --Next of Kin
	) ADCM
		ON ADCM.PersonCode = P.PERSON_CODE
		AND ADCM.RowNum = 1
	LEFT JOIN ebslive.dbo.ADDRESSES ADC
		 ON ADC.ADDRESS_CODE = ADCM.AddressCode
	LEFT JOIN ebslive.dbo.PEOPLE_ADDITIONAL_DETAILS PAD
		ON PAD.PERSON_CODE = P.PERSON_CODE
	LEFT JOIN ebslive.dbo.PEOPLE_ILR PI
		ON PI.PERSON_CODE = P.PERSON_CODE
	LEFT JOIN ebslive.dbo.LEARNER_ILR LI
		ON LI.PERSON_CODE = P.PERSON_CODE
		AND LI.FUNDING_YEAR = FY.FUNDING_YEAR
	LEFT JOIN ebslive.dbo.VERIFIERS TIT
		ON TIT.LOW_VALUE = P.TITLE
		AND TIT.RV_DOMAIN = 'TITLE'
	LEFT JOIN ebslive.dbo.VERIFIERS REL
		ON REL.LOW_VALUE = P.FES_USER_35
		AND REL.RV_DOMAIN = 'RELATIONSHIP_TYPE'
	LEFT JOIN ebslive.dbo.LSC_VERIFIERS ETH
		ON ETH.CODE = COALESCE ( P.ETHNICITY, 99 )
		AND ETH.FUNDING_YEAR = FY.FUNDING_YEAR
		AND ETH.RV_DOMAIN = 'ETHNICITY'
	LEFT JOIN ebslive.dbo.LSC_VERIFIERS DIF
		ON DIF.CODE = COALESCE ( LI.LEARN_DIFF, P.LEARN_DIFF, 9 )
		AND DIF.FUNDING_YEAR = FY.FUNDING_YEAR
		AND DIF.RV_DOMAIN = 'LEARN_DIFF'
	LEFT JOIN ebslive.dbo.SCHOOLS SCH
		ON SCH.SCHOOL_CODE = P.SCHOOL
	LEFT JOIN ebslive.dbo.VERIFIERS VER
		ON VER.LOW_VALUE = P.LRS_VERIFICATION_TYPE
		AND VER.RV_DOMAIN = 'LRS_VERIFICATION_TYPE'
	LEFT JOIN ebslive.dbo.LSC_VERIFIERS COU
		ON COU.CODE = COALESCE ( P.COUNTRY_OF_DOMICILE, 'ZZ' )
		AND COU.FUNDING_YEAR = FY.FUNDING_YEAR
		AND COU.RV_DOMAIN = 'COUNTRY'
	LEFT JOIN ebslive.dbo.LSC_VERIFIERS NAT
		ON NAT.CODE = COALESCE ( P.NATIONALITY, 'ZZ' )
		AND NAT.FUNDING_YEAR = FY.FUNDING_YEAR
		AND NAT.RV_DOMAIN = 'COUNTRY'
	LEFT JOIN ebslive.dbo.VERIFIERS RELI
		ON RELI.LOW_VALUE = P.RELIGION
		AND RELI.RV_DOMAIN = 'RELIGIOUS_BELIEF'
	LEFT JOIN (
		SELECT
			DisabilityID = DIS.ID,
			PersonCode = DIS.PER_PERSON_CODE,
			DisabilityTypeCode = DIS.DISABILITY_TYPE,
			StartDate = DIS.START_DATE,
			EndDate = DIS.END_DATE,
			Description = DIS.FES_LONG_DESCRIPTION,
			IsPrimaryNeed = DIS.PRIMARY_NEED,
			SpecialExamNeeds = DIS.SPECIAL_EXAM_NEEDS,
			IsAssistanceRequired = DIS.IS_ASSISTANCE_REQUIRED,
			IncludeInILR = DIS.DATA_RETURN,
			IsCurrent = 
				CASE
					WHEN 
						CAST ( COALESCE ( DIS.START_DATE, GETDATE() ) AS DATE ) <= CAST ( GETDATE() AS DATE )
						AND CAST ( COALESCE ( DIS.END_DATE, GETDATE() ) AS DATE ) >= CAST ( GETDATE() AS DATE )
						THEN 'Y'
					ELSE 'N'
				END,
			CreatedBy = DIS.CREATED_BY,
			CreatedDate = DIS.CREATED_DATE,
			RowNum = 
				ROW_NUMBER () OVER (
					PARTITION BY
						DIS.PER_PERSON_CODE
					ORDER BY
						DIS.PRIMARY_NEED DESC,
						DIS.DATA_RETURN DESC,
						CASE
							WHEN 
								CAST ( COALESCE ( DIS.START_DATE, GETDATE() ) AS DATE ) <= CAST ( GETDATE() AS DATE )
										AND CAST ( COALESCE ( DIS.END_DATE, GETDATE() ) AS DATE ) >= CAST ( GETDATE() AS DATE )
										THEN 'Y'
							ELSE 'N'
						END DESC,
						DIS.SPECIAL_EXAM_NEEDS DESC,
						DIS.IS_ASSISTANCE_REQUIRED DESC,
						DIS.CREATED_DATE DESC,
						DIS.ID DESC
				)
		FROM ebslive.dbo.DISABILITIES DIS
		WHERE
			CAST ( COALESCE ( DIS.START_DATE, '20' + LEFT ( @AcademicYear, 2 ) + '-08-01' ) AS DATE ) <= CAST ( '20' + LEFT ( @AcademicYear, 2 ) + '-07-31' AS DATE )
			AND CAST ( COALESCE ( DIS.END_DATE, '20' + RIGHT ( @AcademicYear, 2 ) + '-07-31' ) AS DATE ) >= CAST ( '20' + LEFT ( @AcademicYear, 2 ) + '-08-01' AS DATE )
			AND ISNUMERIC ( DIS.DISABILITY_TYPE ) = 1 --Exclude non-ILR codes
	) MDIS
		ON MDIS.PersonCode = P.PERSON_CODE
		AND MDIS.RowNum = 1
	LEFT JOIN ebslive.dbo.VERIFIERS DIS
		ON DIS.LOW_VALUE = MDIS.DisabilityTypeCode
		AND DIS.RV_DOMAIN = 'DISABILITY_TYPE'
	LEFT JOIN (
		SELECT
			PersonCode = ATN.PERSON_CODE,
			PriorAttainLevelCode = ATN.PRIOR_LEVEL,
			IncludeInILR = ATN.INCLUDE_IN_ILR,
			IsConfirmed = ATN.CONFIRMED,
			CollectedDate = ATN.DATELEVELAPP,
			AchievedDate = ATN.DATE_ACHIEVED,
			AcademicYear = 
				CASE
					WHEN MONTH ( ATN.DATELEVELAPP ) >= 8 THEN 
						RIGHT ( CAST ( YEAR ( ATN.DATELEVELAPP ) AS VARCHAR(4) ), 2 )
						+ '/'
						+ RIGHT ( CAST ( YEAR ( ATN.DATELEVELAPP ) + 1 AS VARCHAR(4) ), 2 )
					ELSE 
						RIGHT ( CAST ( YEAR ( ATN.DATELEVELAPP ) - 1 AS VARCHAR(4) ), 2 )
						+ '/'
						+ RIGHT ( CAST ( YEAR ( ATN.DATELEVELAPP ) AS VARCHAR(4) ), 2 )
				END,
			CreatedBy = ATN.CREATED_BY,
			CreatedDate = ATN.CREATED_DATE,
			RowNum = 
				ROW_NUMBER () OVER (
					PARTITION BY
						ATN.PERSON_CODE
					ORDER BY
						ATN.INCLUDE_IN_ILR DESC,
						ATN.DATELEVELAPP DESC,
						ATN.DATE_ACHIEVED DESC,
						ATN.CONFIRMED DESC
				)
		FROM ebslive.dbo.PRIOR_ATTAINMENT_ENTITY ATN
	) MATN
		ON MATN.PersonCode = P.PERSON_CODE
		AND MATN.RowNum = 1
	LEFT JOIN ebslive.dbo.LSC_VERIFIERS ATN
		ON ATN.CODE = MATN.PriorAttainLevelCode
		AND ATN.RV_DOMAIN = 'PRIOR_LEVEL'
		AND ATN.FUNDING_YEAR = FY.FUNDING_YEAR
	LEFT JOIN ebslive.dbo.VERIFIERS GEN
		ON GEN.LOW_VALUE = PAD.GENDER
		AND GEN.RV_DOMAIN = 'GENDER'
	WHERE
		ENR.RowNum = 1
		--AND ENR.CountAsStart = 'Y'
		AND P.PERSONAL_EMAIL IS NOT NULL --Email is Required
		AND ENR.FundModelCode = 'App' --Apprentices Only
		AND P.PERSON_CODE = 2023652
	ORDER BY
		P.SURNAME,
		P.FORENAME,
		P.PERSON_CODE
END