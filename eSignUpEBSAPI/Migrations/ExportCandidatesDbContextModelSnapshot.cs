// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eSignUpEBSAPI.Data;

#nullable disable

namespace eSignUpEBSAPI.Migrations
{
    [DbContext(typeof(ExportCandidatesDbContext))]
    partial class ExportCandidatesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eSignUpEBSAPI.Models.ExportCandidates.ApprenticeshipEmployerModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("EDRSNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "edrsNumber");

                    b.Property<string>("EmployerID")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "employerID");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VacancyEmployerSiteAddress1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VacancyEmployerSiteAddress2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VacancyEmployerSiteName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VacancyEmployerSitePostCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VacancyEmployerSiteTown")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VacancyID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("VacancyID")
                        .IsUnique();

                    b.ToTable("ApprenticeshipEmployer");
                });

            modelBuilder.Entity("eSignUpEBSAPI.Models.ExportCandidates.CandidateDocumentModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("CandidateID")
                        .HasColumnType("int");

                    b.Property<string>("DocumentID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedDate")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "lastUpdatedDate");

                    b.Property<string>("QualifictionType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CandidateID");

                    b.ToTable("CandidateDocument");
                });

            modelBuilder.Entity("eSignUpEBSAPI.Models.ExportCandidates.CandidateExtraFieldsModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("ActualGrade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprenticeshipVacancy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfExam")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "dateOfExam");

                    b.Property<string>("EstimatedGrade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeEducated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastSchoolLeavingDate")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "lastSchoolLeavingDate");

                    b.Property<string>("LastSchoolStartDate")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "lastSchoolStartDate");

                    b.Property<string>("NoQualification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviousCollegeIDNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviouslyStudiedAtCollege")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviouslyStudiedInUK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriorLearningRecognition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkExperience")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CandidateExtraFields");
                });

            modelBuilder.Entity("eSignUpEBSAPI.Models.ExportCandidates.CandidateModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("ARCCardIssueDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ARCCardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddLine3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddLine4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BirthCertificateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CandidateCreatedDate")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "candidateCreatedDate");

                    b.PrimitiveCollection<string>("CandidateEligibilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CandidateExtraFieldsID")
                        .HasColumnType("int");

                    b.Property<string>("CandidateID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CandidateRegistrationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CandidateReligiousIdentity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CandidateStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryLivingPast3Years")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryOfNationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "dateOfBirth");

                    b.Property<string>("DrivingLicenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyContactFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyContactRelationship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyContactRelationshipCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyContactTelNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndorsementReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ethnicity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EthnicityILRCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FamilyMemberName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FamilyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenderDifferentToSex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenderIdentity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GivenNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("HasEHCP")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasEHCPEmployerPermission")
                        .HasColumnType("bit");

                    b.Property<string>("HomeAddressCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("InCare")
                        .HasColumnType("bit");

                    b.Property<bool?>("InCareEmployerPermission")
                        .HasColumnType("bit");

                    b.Property<string>("LLDDHealthProb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LSAdditionalComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("LSNeedsDifficulty")
                        .HasColumnType("bit");

                    b.Property<bool?>("LSNeedsExtraHelp")
                        .HasColumnType("bit");

                    b.Property<string>("LSNeedsExtraHelpWith")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LearnRefNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("LeftCareRecently")
                        .HasColumnType("bit");

                    b.Property<string>("LivingAtAddressSince")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "livingAtAddressSince");

                    b.Property<string>("LocalAuthorityIssueDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalAuthorityReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NASCandidateID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NINumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OffenderInCommunity")
                        .HasColumnType("bit");

                    b.Property<bool?>("OfficialUseEUCitizen")
                        .HasColumnType("bit");

                    b.Property<string>("OfficialUseEvidenceEmpEgPAYE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficialUseOtherEvidence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentGuardianEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentGuardianHomeAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentGuardianHomePostCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentGuardianName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentGuardianTelephoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportIssueDate")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "passportIssueDate");

                    b.Property<string>("PassportNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreferredName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriorAttain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("QuestionSetID")
                        .HasColumnType("int");

                    b.Property<string>("SchoolAt16")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolLastAttended")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SchoolingInterupted")
                        .HasColumnType("bit");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SexualOrientation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SexualOrientationSelfDescribe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("StudentSignatureObtained")
                        .HasColumnType("bit");

                    b.Property<string>("StudentSignatureObtainedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("StudyAtAnotherCollege")
                        .HasColumnType("bit");

                    b.Property<string>("StudyAtAnotherCollegeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ULN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("UnspentConvictions")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("CandidateExtraFieldsID");

                    b.ToTable("Candidate");
                });

            modelBuilder.Entity("eSignUpEBSAPI.Models.ExportCandidates.CandidateNoteModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("CandidateID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedOn")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "createdOn");

                    b.Property<string>("LastUpdatedDate")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "lastUpdatedDate");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CandidateID");

                    b.ToTable("CandidateNote");
                });

            modelBuilder.Entity("eSignUpEBSAPI.Models.ExportCandidates.CandidateQualificationModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("CandidateID")
                        .HasColumnType("int");

                    b.Property<string>("DateOfAward")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "dateOfAward");

                    b.Property<string>("Grade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HighestAward")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganisationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QualificationReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QualificationTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QualificationTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CandidateID");

                    b.ToTable("CandidateQualification");
                });

            modelBuilder.Entity("eSignUpEBSAPI.Models.ExportCandidates.ContactPreferenceModel", b =>
                {
                    b.Property<string>("ContactPreferenceID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CandidateID")
                        .HasColumnType("int");

                    b.Property<string>("ContPrefCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContPrefDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContPrefType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactPreferenceID");

                    b.HasIndex("CandidateID");

                    b.ToTable("ContactPreference");
                });

            modelBuilder.Entity("eSignUpEBSAPI.Models.ExportCandidates.CustomFieldModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("CandidateID")
                        .HasColumnType("int");

                    b.Property<string>("FieldName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormSection")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CandidateID");

                    b.ToTable("CustomField");
                });

            modelBuilder.Entity("eSignUpEBSAPI.Models.ExportCandidates.EmploymentStatusMonitoringModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("ESMCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ESMCodeDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ESMType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ESMTypeDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LearnerEmploymentStatusID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("LearnerEmploymentStatusID");

                    b.ToTable("EmploymentStatusMonitoring");
                });

            modelBuilder.Entity("eSignUpEBSAPI.Models.ExportCandidates.EnglishAndMathsQualificationModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("BKSBResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CandidateID")
                        .HasColumnType("int");

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Score")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CandidateID");

                    b.ToTable("EnglishAndMathsQualification");
                });

            modelBuilder.Entity("eSignUpEBSAPI.Models.ExportCandidates.EnglishMathsComponentModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("DeliveryLead")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndDate")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "endDate");

                    b.Property<string>("FunctionalSkillLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FundingSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Method")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlacedRecruitmentID")
                        .HasColumnType("int");

                    b.Property<bool?>("Required")
                        .HasColumnType("bit");

                    b.Property<string>("StartDate")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "startDate");

                    b.Property<bool?>("StudyTowards")
                        .HasColumnType("bit");

                    b.Property<bool?>("TakeExam")
                        .HasColumnType("bit");

                    b.Property<decimal?>("TotalHours")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("PlacedRecruitmentID");

                    b.ToTable("EnglishMathsComponent");
                });

            modelBuilder.Entity("eSignUpEBSAPI.Models.ExportCandidates.HouseholdSituationModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("HouseholdSituationDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LearnDelFAMCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LearnDelFAMType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlacedRecruitmentID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PlacedRecruitmentID");

                    b.ToTable("HouseholdSituation");
                });

            modelBuilder.Entity("eSignUpEBSAPI.Models.ExportCandidates.LLDDAndHealthProblemModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("CandidateID")
                        .HasColumnType("int");

                    b.Property<string>("LLDDCat")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "llddCat");

                    b.Property<string>("LLDDDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryLLDD")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "primaryLLDD");

                    b.HasKey("ID");

                    b.HasIndex("CandidateID");

                    b.ToTable("LLDDAndHealthProblem");
                });

            modelBuilder.Entity("eSignUpEBSAPI.Models.ExportCandidates.LLDDAndHealthProblemPeopleSoftModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("CandidateID")
                        .HasColumnType("int");

                    b.Property<string>("LLDDCat")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "llddCat");

                    b.Property<string>("LLDDDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryLLDD")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "primaryLLDD");

                    b.HasKey("ID");

                    b.HasIndex("CandidateID");

                    b.ToTable("LLDDAndHealthProblemPeopleSoft");
                });

            modelBuilder.Entity("eSignUpEBSAPI.Models.ExportCandidates.LearnerEmploymentStatusModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("CandidateID")
                        .HasColumnType("int");

                    b.Property<string>("EmpStat")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CandidateID");

                    b.ToTable("LearnerEmploymentStatus");
                });

            modelBuilder.Entity("eSignUpEBSAPI.Models.ExportCandidates.OnboardingDocumentModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("DocumentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentTypeID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlacedRecruitmentID")
                        .HasColumnType("int");

                    b.Property<string>("RecruitmentID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignaturesCollected")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignaturesRequired")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("PlacedRecruitmentID");

                    b.ToTable("OnboardingDocument");
                });

            modelBuilder.Entity("eSignUpEBSAPI.Models.ExportCandidates.PlacedRecruitmentModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("AcademicLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActualStartDate")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "actualStartDate");

                    b.Property<string>("ApprenticeshipStandardCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprenticeshipStandardTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprenticeshipStandardVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprenticeshipVacancyTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CandidateID")
                        .HasColumnType("int");

                    b.Property<string>("CohortRefNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DurationMonths")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EPACost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Employer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployerContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployerContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndDate")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "endDate");

                    b.Property<string>("EndpointAssessorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndpointAssessorReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FundingStartDate")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "fundingStartDate");

                    b.Property<string>("HoursPerWeek")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsEnrolled")
                        .HasColumnType("bit");

                    b.Property<string>("IsPartTimeHours")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "isPartTimeHours");

                    b.Property<string>("KeyAccountManager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeadRecruitmentOfficer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MinOTJTraining")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "minOTJTraining");

                    b.Property<string>("NegotiatedRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PlannedSkillScanHours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProgrammeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgrammeGroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("ProgrammeSites")
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("ProgressReviewEstimatedDates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProgressReviewFrequencyInWeeks")
                        .HasColumnType("int");

                    b.Property<string>("RPLReductionInWeeks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RPLReductionPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecruitmentID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecruitmentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignedUpDate")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "signedUpDate");

                    b.Property<string>("Subcontractor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubcontractorContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubcontractorContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubcontractorUKPRN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TNP1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalRPLOTJHours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrainingPlanOTJHours")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "trainingPlanOTJHours");

                    b.Property<string>("VacancyID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VacancyType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CandidateID");

                    b.ToTable("PlacedRecruitment");
                });

            modelBuilder.Entity("eSignUpEBSAPI.Models.ExportCandidates.ApprenticeshipEmployerModel", b =>
                {
                    b.HasOne("eSignUpEBSAPI.Models.ExportCandidates.PlacedRecruitmentModel", "PlacedRecruitment")
                        .WithOne("ApprenticeshipEmployer")
                        .HasForeignKey("eSignUpEBSAPI.Models.ExportCandidates.ApprenticeshipEmployerModel", "VacancyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlacedRecruitment");
                });

            modelBuilder.Entity("eSignUpEBSAPI.Models.ExportCandidates.CandidateDocumentModel", b =>
                {
                    b.HasOne("eSignUpEBSAPI.Models.ExportCandidates.CandidateModel", "Candidate")
                        .WithMany("CandidateDocuments")
                        .HasForeignKey("CandidateID");

                    b.Navigation("Candidate");
                });

            modelBuilder.Entity("eSignUpEBSAPI.Models.ExportCandidates.CandidateModel", b =>
                {
                    b.HasOne("eSignUpEBSAPI.Models.ExportCandidates.CandidateExtraFieldsModel", "CandidateExtraFields")
                        .WithMany()
                        .HasForeignKey("CandidateExtraFieldsID");

                    b.Navigation("CandidateExtraFields");
                });

            modelBuilder.Entity("eSignUpEBSAPI.Models.ExportCandidates.CandidateNoteModel", b =>
                {
                    b.HasOne("eSignUpEBSAPI.Models.ExportCandidates.CandidateModel", "Candidate")
                        .WithMany("CandidateNotes")
                        .HasForeignKey("CandidateID");

                    b.Navigation("Candidate");
                });

            modelBuilder.Entity("eSignUpEBSAPI.Models.ExportCandidates.CandidateQualificationModel", b =>
                {
                    b.HasOne("eSignUpEBSAPI.Models.ExportCandidates.CandidateModel", "Candidate")
                        .WithMany("CandidateQualifications")
                        .HasForeignKey("CandidateID");

                    b.Navigation("Candidate");
                });

            modelBuilder.Entity("eSignUpEBSAPI.Models.ExportCandidates.ContactPreferenceModel", b =>
                {
                    b.HasOne("eSignUpEBSAPI.Models.ExportCandidates.CandidateModel", "Candidate")
                        .WithMany("ContactPreferences")
                        .HasForeignKey("CandidateID");

                    b.Navigation("Candidate");
                });

            modelBuilder.Entity("eSignUpEBSAPI.Models.ExportCandidates.CustomFieldModel", b =>
                {
                    b.HasOne("eSignUpEBSAPI.Models.ExportCandidates.CandidateModel", "Candidate")
                        .WithMany("CustomFields")
                        .HasForeignKey("CandidateID");

                    b.Navigation("Candidate");
                });

            modelBuilder.Entity("eSignUpEBSAPI.Models.ExportCandidates.EmploymentStatusMonitoringModel", b =>
                {
                    b.HasOne("eSignUpEBSAPI.Models.ExportCandidates.LearnerEmploymentStatusModel", "LearnerEmploymentStatus")
                        .WithMany("EmploymentStatusMonitoring")
                        .HasForeignKey("LearnerEmploymentStatusID");

                    b.Navigation("LearnerEmploymentStatus");
                });

            modelBuilder.Entity("eSignUpEBSAPI.Models.ExportCandidates.EnglishAndMathsQualificationModel", b =>
                {
                    b.HasOne("eSignUpEBSAPI.Models.ExportCandidates.CandidateModel", "Candidate")
                        .WithMany("EnglishAndMathsQualifications")
                        .HasForeignKey("CandidateID");

                    b.Navigation("Candidate");
                });

            modelBuilder.Entity("eSignUpEBSAPI.Models.ExportCandidates.EnglishMathsComponentModel", b =>
                {
                    b.HasOne("eSignUpEBSAPI.Models.ExportCandidates.PlacedRecruitmentModel", "PlacedRecruitment")
                        .WithMany("EnglishMathsComponents")
                        .HasForeignKey("PlacedRecruitmentID");

                    b.Navigation("PlacedRecruitment");
                });

            modelBuilder.Entity("eSignUpEBSAPI.Models.ExportCandidates.HouseholdSituationModel", b =>
                {
                    b.HasOne("eSignUpEBSAPI.Models.ExportCandidates.PlacedRecruitmentModel", "PlacedRecruitment")
                        .WithMany("HouseholdSituations")
                        .HasForeignKey("PlacedRecruitmentID");

                    b.Navigation("PlacedRecruitment");
                });

            modelBuilder.Entity("eSignUpEBSAPI.Models.ExportCandidates.LLDDAndHealthProblemModel", b =>
                {
                    b.HasOne("eSignUpEBSAPI.Models.ExportCandidates.CandidateModel", "Candidate")
                        .WithMany("LLDDAndHealthProblems")
                        .HasForeignKey("CandidateID");

                    b.Navigation("Candidate");
                });

            modelBuilder.Entity("eSignUpEBSAPI.Models.ExportCandidates.LLDDAndHealthProblemPeopleSoftModel", b =>
                {
                    b.HasOne("eSignUpEBSAPI.Models.ExportCandidates.CandidateModel", "Candidate")
                        .WithMany("LLDDAndHealthProblemsPeopleSoft")
                        .HasForeignKey("CandidateID");

                    b.Navigation("Candidate");
                });

            modelBuilder.Entity("eSignUpEBSAPI.Models.ExportCandidates.LearnerEmploymentStatusModel", b =>
                {
                    b.HasOne("eSignUpEBSAPI.Models.ExportCandidates.CandidateModel", "Candidate")
                        .WithMany("LearnerEmploymentStatuses")
                        .HasForeignKey("CandidateID");

                    b.Navigation("Candidate");
                });

            modelBuilder.Entity("eSignUpEBSAPI.Models.ExportCandidates.OnboardingDocumentModel", b =>
                {
                    b.HasOne("eSignUpEBSAPI.Models.ExportCandidates.PlacedRecruitmentModel", "PlacedRecruitment")
                        .WithMany("OnboardingDocuments")
                        .HasForeignKey("PlacedRecruitmentID");

                    b.Navigation("PlacedRecruitment");
                });

            modelBuilder.Entity("eSignUpEBSAPI.Models.ExportCandidates.PlacedRecruitmentModel", b =>
                {
                    b.HasOne("eSignUpEBSAPI.Models.ExportCandidates.CandidateModel", "Candidate")
                        .WithMany("PlacedRecruitments")
                        .HasForeignKey("CandidateID");

                    b.Navigation("Candidate");
                });

            modelBuilder.Entity("eSignUpEBSAPI.Models.ExportCandidates.CandidateModel", b =>
                {
                    b.Navigation("CandidateDocuments");

                    b.Navigation("CandidateNotes");

                    b.Navigation("CandidateQualifications");

                    b.Navigation("ContactPreferences");

                    b.Navigation("CustomFields");

                    b.Navigation("EnglishAndMathsQualifications");

                    b.Navigation("LLDDAndHealthProblems");

                    b.Navigation("LLDDAndHealthProblemsPeopleSoft");

                    b.Navigation("LearnerEmploymentStatuses");

                    b.Navigation("PlacedRecruitments");
                });

            modelBuilder.Entity("eSignUpEBSAPI.Models.ExportCandidates.LearnerEmploymentStatusModel", b =>
                {
                    b.Navigation("EmploymentStatusMonitoring");
                });

            modelBuilder.Entity("eSignUpEBSAPI.Models.ExportCandidates.PlacedRecruitmentModel", b =>
                {
                    b.Navigation("ApprenticeshipEmployer");

                    b.Navigation("EnglishMathsComponents");

                    b.Navigation("HouseholdSituations");

                    b.Navigation("OnboardingDocuments");
                });
#pragma warning restore 612, 618
        }
    }
}
